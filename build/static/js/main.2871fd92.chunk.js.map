{"version":3,"sources":["components/list/style.module.css","components/checkbox/style.module.css","components/copytext/style.module.css","components/button/style.module.css","components/data/style.module.css","components/number/style.module.css","components/text/style.module.css","components/plugins/style.module.css","components/master/style.module.css","components/tab/style.module.css","components/tab/Tab.js","components/tab/Tabs.js","components/list/List.js","components/number/Number.js","components/data/Popup.js","components/checkbox/CheckBox.js","components/master/Options.js","components/button/Button.js","components/button/Separator.js","components/button/Break.js","components/master/Buttons.js","components/url/URL.js","components/text/Text.js","components/url/URLS.js","components/copytext/CopyText.js","components/master/State.js","components/plugins/Plugins.js","components/themes/Color.js","components/themes/Themes.js","components/master/LoremIpsum.js","components/master/Sizes.js","components/master/JoditMaster.js","App.js","index.js"],"names":["module","exports","Tab","this","props","children","Component","Tabs","openTab","event","setTab","target","innerText","links","currentActive","currentTab","tabs","filter","tab","type","map","index","label","active","push","className","style","button","buttonActive","onClick","header","List","onChange","refs","elm","value","name","listItems","Array","isArray","list","Object","keys","key","defaultValue","select","ref","Number","parseInt","Popup","state","content","findInfo","needle","data","checkInfo","setState","loadingState","loadData","updateContent","box","popup","window","JoditPlayConfig","dataURL","process","success","fetch","getMyPath","then","json","haystack","undefined","replace","shortText","length","callback","result","info","some","CheckBox","hovered","onBlur","clearTimeout","timeout","onHover","setTimeout","checked","onMouseEnter","onMouseLeave","right","defaultChecked","labelText","popupKey","Options","preset","setOption","custom","inline","toolbar","textIcons","toolbarButtonSize","toolbarSticky","toolbarStickyOffset","autofocus","useSearch","spellcheck","iframe","direction","language","Jodit","lang","theme","enter","defaultMode","MODE_WYSIWYG","MODE_SOURCE","MODE_SPLIT","showCharsCounter","showWordsCounter","showXPathInStatusbar","uploader","insertImageAsBase64URI","Button","toggle","setActive","moveUp","move","moveDown","onDoubleClick","row","row_active","row_disable","icon","dangerouslySetInnerHTML","__html","modules","Icon","get","lastCol","Separator","remove","e","stopPropagation","separator","colSpan","trash","Break","Buttons","toggleAll","buttons","removeButtons","forEach","indexOf","splice","setButtons","activeIndex","up","buttonsStart","slice","next","buf","buttonsEnd","addSeparator","getAttribute","restoreDefaults","confirm","defaultOptions","table","textAlign","padding","restore","title","data-separator","add","URL","placeholder","Text","URLS","parentNode","querySelector","plus","urls","call","querySelectorAll","input","concat","url","fill","CopyText","mode","textarea","document","createElement","body","appendChild","codebox","execCommand","removeChild","render","item","config","saveHeightInStorage","saveModeInStorage","readonly","askBeforePasteHTML","askBeforePasteFromWord","defaultActionOnPaste","INSERT_AS_HTML","INSERT_CLEAR_HTML","INSERT_AS_TEXT","INSERT_ONLY_TEXT","Plugins","togglePlugin","pluginName","plugins","disablePlugins","split","Boolean","toString","join","from","items","main","displayColorPicker","handleClick","handleClose","setColor","color","rgb","selector","styleKey","hex","bindValue","bindTransform","styles","reactCSS","marginBottom","width","height","borderRadius","background","swatch","boxShadow","display","cursor","marginRight","popover","position","zIndex","cover","top","bottom","left","Themes","getValue","setValue","setCSS","generateCss","css","count","subkey","resetStyles","Helpers","fromCamelCase","pop","getComputedStyle","match","colorToHex","extend","bind","tinycolor","setAlpha","toHex8String","LoremIpsum","Sizes","allowResizeY","setHeight","minHeight","maxHeight","allowResizeX","setWidth","minWidth","maxWidth","defaultFontSizePoints","pt","px","SyntaxHighlighter","registerLanguage","js","history","createHistory","JoditMaster","defaultState","getDefaultState","showLoremIpsum","currentButtonsTab","workBoxWidth","buttonsMD","getButtons","buttonsSM","buttonsXS","getRemoveButtons","borderColor","backgroundColor","iframeStyle","toolbarAdaptive","sizeLG","initialCSS","initialConfig","setButtonsTab","change","toggleLoremIpsum","timer","JSON","stringify","prevState","newStage","iframeCSSLinks","iframeBaseUrl","link","getCode","options","getChangedOption","setConfig","__isDefault","historyAPI","http_build_query","onEditorChange","setWorkboxWidth","createEvent","initEvent","dispatchEvent","isDefault","restoreDefault","jodit","make","editorRef","getButtonsNames","destruct","code","setCode","layout","leftside","showEditor","workbox","showCode","showLineNumbers","codeStyle","Fragment","rightside","defaultRestore","showButtonsTab","urlencode","str","encodeURIComponent","formdata","numericPrefix","argSeparator","encodeFunc","tmp","_httpBuildQueryHelper","val","k","Error","isNaN","String","query","getParams","test","reduce","params","param","decodeURIComponent","App","ready","location","search","substr","JoditPlayReady","element","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2871fd92.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"style_list__1lIG0\",\"label\":\"style_label__2XQeQ\",\"select\":\"style_select__RjESN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__1DMCT\",\"labelText\":\"style_labelText__1QvWS\",\"right\":\"style_right__1GLWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"style_item__1Hqts\",\"button\":\"style_button__2qNs4\",\"copied\":\"style_copied__1crrM\",\"ready\":\"style_ready__18pc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__7qQty\",\"separator\":\"style_separator__2psV7\",\"row\":\"style_row__2TX94\",\"row_disable\":\"style_row_disable__2FFT_\",\"row_active\":\"style_row_active__1ZGWE\",\"icon\":\"style_icon__GX-gp\",\"moveDown\":\"style_moveDown__3AjG2\",\"moveUp\":\"style_moveUp__2S9pP\",\"trash\":\"style_trash__29vP3\",\"add\":\"style_add__7RkTu\",\"restore\":\"style_restore__2fmf2\",\"lastCol\":\"style_lastCol__3ZTeq\",\"info\":\"style_info__2n5vM\",\"fill\":\"style_fill__E0PIu\",\"label\":\"style_label__HkAAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"style_box__1ibXL\",\"popup\":\"style_popup__1nclg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__1Qzzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__1tU4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__FDSDa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"style_layout__3ZBP-\",\"rightside\":\"style_rightside__27SmD\",\"leftside\":\"style_leftside__1BPts\",\"item\":\"style_item__2VXQG\",\"defaultRestore\":\"style_defaultRestore__5mBZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"style_tab__1JKbX\",\"active\":\"style_active__ugHys\",\"header\":\"style_header__q0Xg6\",\"button\":\"style_button__2Q5NL\",\"buttonActive\":\"style_buttonActive__3ccvn\"};","import React, { Component } from 'react';\r\n\r\nexport default class Tab extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\nimport Tab from \"./Tab\";\r\n\r\nexport default class Tabs extends Component {\r\n    openTab = (event) => {\r\n        this.props.setTab(event.target.innerText);\r\n    };\r\n    render() {\r\n        let links = [],\r\n            currentActive = this.props.currentTab;\r\n\r\n        const tabs = this.props.children.filter((tab) => tab.type === Tab).map((tab, index) => {\r\n            if (!currentActive) {\r\n                currentActive  =  tab.props.label\r\n            }\r\n\r\n            let active = tab.props.label === currentActive;\r\n\r\n            links.push(<span key={index} className={style.button + (active ? ' ' + style.buttonActive : '')} onClick={(event) => {\r\n                tab.props.onClick && tab.props.onClick(tab);\r\n                this.openTab(event);\r\n            }}>{tab.props.label}</span>);\r\n\r\n            if (!active) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <div key={index} className={style.tab + (active ? ' ' + style.active : '')}> {tab} </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className={style.tabs}>\r\n                <div className={style.header}>\r\n                    {links}\r\n                </div>\r\n                {tabs}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class List extends Component {\r\n    onChange = () => {\r\n        this.props.onChange && this.props.onChange(this.refs.elm.value, this.props.name);\r\n    };\r\n    render() {\r\n        const keys = Array.isArray(this.props.list) ? this.props.list : Object.keys(this.props.list);\r\n\r\n        const listItems = keys.map((key) => (\r\n            <option key={key} value={key}>\r\n                {Array.isArray(this.props.list) ? key : this.props.list[key]}\r\n            </option>\r\n        ));\r\n\r\n        return (\r\n            <div className={style.list}>\r\n                <label className={style.label}>\r\n                    {this.props.label}\r\n                </label>\r\n                <select defaultValue={this.props.value} className={style.select} ref=\"elm\" onChange={this.onChange}>\r\n                    {listItems}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Number extends Component {\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(parseInt(event.target.value, 10), this.props.name);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <input onChange={this.onChange} type=\"number\" defaultValue={this.props.value}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Popup extends Component {\r\n    static loadingState = false;\r\n    static data = null;\r\n\r\n    static getMyPath() {\r\n        // let a = document.createElement('A');\r\n        // a.href = window.JoditPlayConfig.curScriptElement.src;\r\n        // let path = a.pathname.split('/');\r\n        return window.JoditPlayConfig.dataURL || process.env.PUBLIC_URL\r\n    }\r\n\r\n    static loadData(success) {\r\n        fetch(Popup.getMyPath() + 'data.json')\r\n            .then((data) => {\r\n                return data.json();\r\n            })\r\n            .then((data) => {\r\n                Popup.data = data;\r\n                success();\r\n            })\r\n    }\r\n\r\n    static checkInfo(needle, haystack) {\r\n        if (haystack.name !== undefined && haystack.name.replace(/\"/g, '') === needle) {\r\n            return Popup.findInfo(needle, haystack, (needle, haystack) => {\r\n                if (haystack.shortText && haystack.shortText.replace(/\\s/g, '').length) {\r\n                    return haystack.shortText;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    static findInfo(needle, haystack, callback) {\r\n        const info = callback(needle, haystack);\r\n\r\n        if (info) {\r\n            return info;\r\n        }\r\n\r\n        if (typeof haystack === 'object') {\r\n            let result;\r\n\r\n            Object.keys(haystack).some((key) => {\r\n                result = Popup.findInfo(needle, haystack[key], callback);\r\n\r\n                if (result) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    state = {\r\n        content: ''\r\n    };\r\n\r\n    updateContent() {\r\n        const content = Popup.findInfo(this.props.needle, Popup.data, Popup.checkInfo) || 'Not found';\r\n        if (this.state.content !== content) {\r\n            this.setState({\r\n                content\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (!Popup.data && !Popup.loadingState) {\r\n            Popup.loadingState = true;\r\n            Popup.loadData(() => {\r\n                this.updateContent();\r\n            });\r\n        }\r\n        if (Popup.data) {\r\n            this.updateContent();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className={style.box}>\r\n            <div className={style.popup}>\r\n                {this.state.content || <span>Loading ...</span>}\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\nimport Toggle from 'react-toggle'\r\nimport \"react-toggle/style.css\"\r\nimport Popup from \"../data/Popup\";\r\n\r\nexport default class CheckBox extends Component {\r\n    state = {\r\n        hovered: false\r\n    };\r\n    timeout;\r\n    onBlur = (event) => {\r\n        window.clearTimeout(this.timeout);\r\n        if (this.state.hovered) {\r\n            this.setState({\r\n                hovered: false\r\n            });\r\n        }\r\n\r\n    };\r\n    onHover = (event) => {\r\n        this.timeout =  window.setTimeout(() => {\r\n            if (!this.state.hovered) {\r\n                this.setState({\r\n                    hovered: true\r\n                });\r\n            }\r\n        }, 300);\r\n    };\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(event.target.checked, this.props.name);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onMouseEnter={this.onHover} onMouseLeave={this.onBlur} className={style.label + (this.props.right ? ' ' + style.right : '')}>\r\n                <label>\r\n                    {this.props.checked !== undefined ?\r\n                        <Toggle\r\n                            defaultChecked={this.props.defaultChecked}\r\n                            checked={this.props.checked}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        :\r\n                        <Toggle\r\n                            defaultChecked={this.props.defaultChecked}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    }\r\n                    <span className={style.labelText}>{this.props.label}</span>\r\n                </label>\r\n                {this.props.popupKey && this.state.hovered && <Popup needle={this.props.popupKey}/>}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Jodit} from \"jodit\";\r\nimport List from \"../list/List\";\r\nimport Number from \"../number/Number\";\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\n\r\nexport default class Options extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <List name=\"preset\" value={this.props.state.preset} onChange={this.props.setOption} list={{\r\n                    custom: 'None',\r\n                    inline: 'Inline Mode',\r\n                }} label=\"Presets\"/>\r\n\r\n                <fieldset>\r\n                    <legend>Toolbar</legend>\r\n                    <CheckBox popupKey={\"toolbar\"} name=\"toolbar\" onChange={this.props.setOption} checked={this.props.state.toolbar} label=\"Show Toolbar\"/>\r\n                    {this.props.state.toolbar === false ||\r\n                    <CheckBox\r\n                        popupKey={\"textIcons\"}\r\n                        name=\"textIcons\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.textIcons}\r\n                        label=\"Text Icons\"\r\n                    />\r\n                    }\r\n                    {this.props.state.toolbar === false ||\r\n                    <List value={this.props.state.toolbarButtonSize} name=\"toolbarButtonSize\"\r\n                          onChange={this.props.setOption} list={[\r\n                        \"tiny\", \"xsmall\", \"small\", \"middle\", \"large\"\r\n                    ]} label=\"Size of icons\"/>\r\n                    }\r\n                    {this.props.state.toolbar === false ||\r\n                    <CheckBox popupKey={\"toolbarSticky\"} name=\"toolbarSticky\" onChange={this.props.setOption} checked={this.props.state.toolbarSticky} label=\"Sticky Toolbar\"/>\r\n                    }\r\n\r\n                    {this.props.state.toolbar === false || this.props.state.toolbarSticky === false ||\r\n                    <Number\r\n                        label=\"Sticky offset\"\r\n                        name=\"toolbarStickyOffset\"\r\n                        onChange={this.props.setOption}\r\n                        value={this.props.state.toolbarStickyOffset}\r\n                    />\r\n                    }\r\n                </fieldset>\r\n                <CheckBox popupKey={\"autofocus\"} name=\"autofocus\" onChange={this.props.setOption} checked={this.props.state.autofocus} label=\"Autofocus\"/>\r\n\r\n                <CheckBox popupKey={\"useSearch\"} name=\"useSearch\" onChange={this.props.setOption} checked={this.props.state.useSearch} label=\"Use search\"/>\r\n\r\n                <CheckBox popupKey={\"spellcheck\"} name=\"spellcheck\" onChange={this.props.setOption} checked={this.props.state.spellcheck} label=\"Spell Check\"/>\r\n                <CheckBox popupKey={\"iframe\"} name=\"iframe\" onChange={this.props.setOption} checked={this.props.state.iframe} label=\"Iframe mode\"/>\r\n\r\n                <List value={this.props.state.direction} name=\"direction\" onChange={this.props.setOption} list={{'': 'auto', 'rtl': 'rtl', 'ltr': 'ltr'}} label=\"Direction\"/>\r\n                <List value={this.props.state.language} name=\"language\" onChange={this.props.setOption} list={['Auto', ...Object.keys(Jodit.lang)]} label=\"Language\"/>\r\n\r\n                <List value={this.props.state.theme} name=\"theme\" onChange={this.props.setOption} list={{\r\n                    'default' : 'Default',\r\n                    'dark' : 'Dark',\r\n                }} label=\"Theme\"/>\r\n\r\n                <List name=\"enter\" value={this.props.state.enter} onChange={this.props.setOption} list={{\r\n                    \"P\": 'Paragraph (P)',\r\n                    \"DIV\": 'Block (DIV)',\r\n                    \"BR\": 'Break (BR)',\r\n                }} label=\"Element that will be created on Enter\"/>\r\n\r\n\r\n                <List name=\"defaultMode\" value={this.props.state.defaultMode} onChange={this.props.setOption} list={{\r\n                    [Jodit.MODE_WYSIWYG]: 'WYSIWYG',\r\n                    [Jodit.MODE_SOURCE]: 'Source code',\r\n                    [Jodit.MODE_SPLIT]: 'Split code',\r\n                }} label=\"Default mode\"/>\r\n\r\n                <fieldset>\r\n                    <legend>Status bar</legend>\r\n                    <CheckBox\r\n                        popupKey={\"showCharsCounter\"}\r\n                        name=\"showCharsCounter\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.showCharsCounter}\r\n                        label=\"Show chars counter\"\r\n                    />\r\n                    <CheckBox\r\n                        popupKey={\"showWordsCounter\"}\r\n                        name=\"showWordsCounter\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.showWordsCounter}\r\n                        label=\"Show words counter\"\r\n                    />\r\n                    <CheckBox\r\n                        popupKey={\"showXPathInStatusbar\"}\r\n                        name=\"showXPathInStatusbar\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.showXPathInStatusbar}\r\n                        label=\"Show path to selected element\"\r\n                    />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>Uploader</legend>\r\n                    <CheckBox\r\n                        name=\"uploader.insertImageAsBase64URI\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.uploader.insertImageAsBase64URI}\r\n                        label=\"Insert image as Base64 URI\"\r\n                    />\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\nimport {Jodit} from \"jodit\";\r\n\r\n\r\nexport default class Button extends Component {\r\n    toggle = (active) => {\r\n        this.props.toggle(this.props.index, active);\r\n    };\r\n    setActive = () => {\r\n        this.props.setActive(this.props.index);\r\n    };\r\n    moveUp = () => {\r\n        this.props.move(this.props.index, true)\r\n    };\r\n    moveDown = () => {\r\n        this.props.move(this.props.index, false)\r\n    };\r\n    render() {\r\n        return <tr onDoubleClick={this.setActive} className={style.row + ' ' + (this.props.active ? style.row_active : '')+ ' ' + (!this.props.checked ? style.row_disable : '')}>\r\n            <td>\r\n                <div className={style.icon} dangerouslySetInnerHTML={{__html:Jodit.modules.Icon.get(this.props.label)}}/>\r\n            </td>\r\n            <td>\r\n                {this.props.label}\r\n            </td>\r\n            <td>\r\n                <span onClick={this.moveUp} className={style.moveUp}></span>\r\n                <span onClick={this.moveDown} className={style.moveDown}></span>\r\n            </td>\r\n            <td  className={style.lastCol}>\r\n                <CheckBox checked={this.props.checked} onChange={this.toggle}/>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Separator extends Component {\r\n    remove = (e) => {\r\n        this.props.remove(this.props.index);\r\n        e.stopPropagation()\r\n    };\r\n    setActive = () => {\r\n        this.props.setActive(this.props.index);\r\n    };\r\n    moveUp = () => {\r\n        this.props.move(this.props.index, true)\r\n    };\r\n    moveDown = () => {\r\n        this.props.move(this.props.index, false)\r\n    };\r\n    render() {\r\n        return <tr onDoubleClick={this.setActive} className={style.row + ' ' + style.separator + ' ' + (this.props.active ? style.row_active : '')}>\r\n            <td colSpan={2}>\r\n               Group separator\r\n            </td>\r\n            <td>\r\n                <span onClick={this.moveUp} className={style.moveUp}></span>\r\n                <span onClick={this.moveDown} className={style.moveDown}></span>\r\n            </td>\r\n            <td className={style.lastCol}>\r\n                <span onClick={this.remove} className={style.trash}></span>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Break extends Component {\r\n    remove = (e) => {\r\n        this.props.remove(this.props.index);\r\n        e.stopPropagation()\r\n    };\r\n    setActive = () => {\r\n        this.props.setActive(this.props.index);\r\n    };\r\n    moveUp = () => {\r\n        this.props.move(this.props.index, true)\r\n    };\r\n    moveDown = () => {\r\n        this.props.move(this.props.index, false)\r\n    };\r\n    render() {\r\n        return <tr onDoubleClick={this.setActive} className={style.row + ' ' + style.separator + ' ' + (this.props.active ? style.row_active : '')}>\r\n            <td colSpan={2}>\r\n               Break\r\n            </td>\r\n            <td>\r\n                <span onClick={this.moveUp} className={style.moveUp}></span>\r\n                <span onClick={this.moveDown} className={style.moveDown}></span>\r\n            </td>\r\n            <td className={style.lastCol}>\r\n                <span onClick={this.remove} className={style.trash}></span>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from \"../button/Button\";\r\nimport style from '../button/style.module.css';\r\nimport Separator from \"../button/Separator\";\r\nimport Break from \"../button/Break\";\r\nimport {Jodit} from \"jodit\";\r\n\r\n\r\nexport default class Buttons extends Component {\r\n    toggleAll = () => {\r\n        const buttons = [...this.props.buttons];\r\n        const removeButtons = [...this.props.removeButtons];\r\n\r\n        buttons.forEach((button, index) => {\r\n            if (removeButtons.indexOf(button) !== -1) {\r\n                removeButtons.splice(removeButtons.indexOf(button), 1);\r\n            } else {\r\n                removeButtons.push(button);\r\n            }\r\n        });\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            buttons,\r\n            removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    toggle = (index, active) => {\r\n        const button = this.props.buttons[index];\r\n        const removeButtons = [...this.props.removeButtons];\r\n\r\n        if (removeButtons.indexOf(button) !== -1 && active) {\r\n            removeButtons.splice(removeButtons.indexOf(button), 1);\r\n        } else {\r\n            !active && removeButtons.push(button);\r\n        }\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            this.props.buttons,\r\n            removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    move = (index, up) => {\r\n        const buttonsStart = this.props.buttons.slice();\r\n        const next = index + (up ? -1 : 1);\r\n        const buf = buttonsStart[index];\r\n\r\n        buttonsStart[index] = buttonsStart[next];\r\n        buttonsStart[next] = buf;\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            buttonsStart,\r\n            this.props.removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    remove = (index) => {\r\n        const buttonsStart = this.props.buttons.slice(0, index);\r\n        const buttonsEnd = this.props.buttons.slice(index + 1);\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            [...buttonsStart, ...buttonsEnd],\r\n            this.props.removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n\r\n    addSeparator = (event) => {\r\n        const buttonsStart = this.props.buttons.slice(0, this.props.activeIndex);\r\n        const buttonsEnd = this.props.buttons.slice(this.props.activeIndex);\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            [...buttonsStart, event.target.getAttribute('data-separator'), ...buttonsEnd],\r\n            this.props.removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    setActive = (index) => {\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            this.props.buttons,\r\n            this.props.removeButtons,\r\n            index\r\n        );\r\n    };\r\n    restoreDefaults = () => {\r\n        if (window.confirm('Are you shure?')) {\r\n            this.props.setButtons( this.props.name, Jodit.defaultOptions[this.props.name], [], 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const list = this.props.buttons.map((key, index) => {\r\n            switch (key) {\r\n                case \"\\n\":\r\n                    return <Break move={this.move} remove={this.remove} setActive={this.setActive} active={this.props.activeIndex === index} label={key} index={index} key={index}/>;\r\n                case \"|\":\r\n                    return <Separator move={this.move} remove={this.remove} setActive={this.setActive} active={this.props.activeIndex === index} label={key} index={index} key={index}/>;\r\n                default:\r\n                    return <Button move={this.move} checked={this.props.removeButtons.indexOf(key) === -1} toggle={this.toggle} setActive={this.setActive} active={this.props.activeIndex === index} label={key} index={index} key={index}/>\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <table className={style.table}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td colSpan={5} style={{textAlign: \"right\", padding: \"5px 0\"}}>\r\n                            <span onClick={this.restoreDefaults} className={style.restore} title=\"Restore default\"></span>\r\n                            <span onClick={this.addSeparator} data-separator={\"\\n\"} className={style.add} title=\"Add Break\">Break</span>\r\n                            <span onClick={this.addSeparator} data-separator=\"|\" className={style.add} title=\"Add Separator\">Separator</span>\r\n                            <span onClick={this.toggleAll} className={style.restore} title=\"Toggle all\">Toggle all</span>\r\n                        </td>\r\n                    </tr>\r\n                    {list}\r\n                    </tbody>\r\n\r\n                </table>\r\n                <p className={style.info}>Double-Click selected row</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from '../button/style.module.css';\r\n\r\nexport default class URL extends Component {\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(event.target.value, this.props.name);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <input placeholder=\"https://\" onChange={this.onChange} type=\"url\" defaultValue={this.props.value}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Text extends Component {\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(event.target.value, this.props.name);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <textarea onChange={this.onChange} defaultValue={this.props.value}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from '../button/style.module.css';\r\n\r\nexport default class URLS extends Component {\r\n    add = () => {\r\n        this.onChange(['']);\r\n    };\r\n    remove = (event) => {\r\n        let tr = event.target.parentNode.parentNode;\r\n        tr.querySelector('input').value = '';\r\n\r\n        this.onChange();\r\n    };\r\n\r\n    onChange = (plus) => {\r\n        let  urls = [];\r\n        urls = [].slice.call(this.refs.table.querySelectorAll('input')).map(input => input.value).filter(elm => elm);\r\n\r\n        if (Array.isArray(plus)) {\r\n            urls = urls.concat(plus);\r\n        }\r\n\r\n        this.props.onChange && this.props.onChange(urls, this.props.name);\r\n    };\r\n\r\n    render() {\r\n        const urls = ((this.props.value && Array.isArray(this.props.value) && this.props.value.length) ? this.props.value : ['']).map((url, index) => {\r\n            return (<tr key={index + '' + url}>\r\n                <td>\r\n                    <input placeholder=\"https://\" onBlur={this.onChange} type=\"url\"  defaultValue={url}/>\r\n                </td>\r\n                <td className={style.fill}>\r\n                    <span onClick={this.add} className={style.add}></span>\r\n                    <span onClick={this.remove} className={style.trash}></span>\r\n                </td>\r\n            </tr>);\r\n        });\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <table className={style.table} ref=\"table\">\r\n                    <tbody>\r\n                      {urls}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class CopyText extends Component {\r\n    state = {\r\n        mode: 'ready'\r\n    };\r\n\r\n    onClick = () => {\r\n        const textarea = document.createElement('textarea');\r\n\r\n        document.body.appendChild(textarea);\r\n        textarea.value = this.refs.codebox.innerText;\r\n        textarea.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(textarea);\r\n\r\n        this.setState({\r\n            mode: 'copied'\r\n        });\r\n\r\n        setTimeout(() => {\r\n            if (this.state.mode === 'copied') {\r\n                this.setState({\r\n                    mode: 'ready'\r\n                });\r\n            }\r\n        }, 1000);\r\n    };\r\n    render = () => (\r\n        <div className={style.item}>\r\n            <button className={style.button + ' ' + style[this.state.mode]} onClick={this.onClick} type=\"button\">\r\n                {this.state.mode === 'ready' ? 'Copy code' : 'Copied!'}\r\n            </button>\r\n            <div ref=\"codebox\">\r\n                {this.props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport List from \"../list/List\";\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\nimport {Jodit} from 'jodit';\r\n\r\nexport default class state extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CheckBox\r\n                    popupKey={\"saveHeightInStorage\"}\r\n                    name=\"saveHeightInStorage\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.saveHeightInStorage}\r\n                    label=\"Save height in storage\"\r\n                />\r\n                <CheckBox\r\n                    popupKey={\"saveModeInStorage\"}\r\n                    name=\"saveModeInStorage\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.saveModeInStorage}\r\n                    label=\"Save mode in storage\"\r\n                />\r\n                <CheckBox popupKey={\"readonly\"} name=\"readonly\" onChange={this.props.setOption} checked={this.props.config.readonly} label=\"Read Only\"/>\r\n                <hr/>\r\n                <CheckBox\r\n                    popupKey={\"askBeforePasteHTML\"}\r\n                    name=\"askBeforePasteHTML\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.askBeforePasteHTML}\r\n                    label=\"Ask before paste HTML\"\r\n                />\r\n                <CheckBox\r\n                    popupKey={\"askBeforePasteFromWord\"}\r\n                    name=\"askBeforePasteFromWord\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.askBeforePasteFromWord}\r\n                    label=\"Ask before paste from Word/Excel\"\r\n                />\r\n                <List value={this.props.config.defaultActionOnPaste} name=\"defaultActionOnPaste\" onChange={this.props.setOption} list={{\r\n                    [Jodit.INSERT_AS_HTML] : 'Insert as HTML',\r\n                    [Jodit.INSERT_CLEAR_HTML] : 'Insert cleared HTML',\r\n                    [Jodit.INSERT_AS_TEXT] : 'Insert as plain text',\r\n                    [Jodit.INSERT_ONLY_TEXT] : 'Insert only text',\r\n                }} label=\"Default insert method\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport style from './style.module.css';\r\nimport {Jodit} from 'jodit';\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\n\r\nexport default class Plugins extends Component {\r\n\ttogglePlugin = (value, pluginName) => {\r\n\t\tlet plugins = Array.isArray(this.props.config.disablePlugins) ?\r\n      [...this.props.config.disablePlugins] :\r\n      [...this.props.config.disablePlugins.split(/[\\s,]+/)];\r\n\r\n\t\tplugins = plugins.filter(Boolean);\r\n\r\n\t\tif (plugins.indexOf(pluginName) === -1 && !value) {\r\n\t\t\tplugins.push(pluginName);\r\n\t\t}\r\n\r\n\t\tif (plugins.indexOf(pluginName) !== -1 && value) {\r\n\t\t\tplugins.splice(plugins.indexOf(pluginName), 1);\r\n\t\t}\r\n\r\n\t\tif (plugins.toString() !== this.props.config.disablePlugins.toString()) {\r\n\t\t\tthis.props.setOption(plugins.length ? plugins.join(',') : [], 'disablePlugins');\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst plugins = Array.from(Jodit.plugins.items.keys()).map((pluginName) =>\r\n\t\t\t<CheckBox\r\n\t\t\t\tpopupKey={'plugins/' + pluginName}\r\n\t\t\t\tkey={pluginName}\r\n\t\t\t\tname={pluginName}\r\n\t\t\t\tonChange={this.togglePlugin}\r\n\t\t\t\tdefaultChecked={this.props.config.disablePlugins.indexOf(pluginName) === -1}\r\n\t\t\t\tlabel={pluginName}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className={style.main}>\r\n\t\t\t\t{plugins}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport reactCSS from 'reactcss'\r\n// import styles from \"./style.module.css\";\r\nimport { SketchPicker } from 'react-color';\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        displayColorPicker: false,\r\n    };\r\n    handleClick = () => {\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    setColor = (color) => {\r\n        this.setState({ color: color.rgb });\r\n        this.props.setColor(this.props.selector, this.props.styleKey, color.hex);\r\n        if (this.props.bindValue) {\r\n            this.props.bindValue(this.props.bindTransform ? this.props.bindTransform(color.hex) : color.hex);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let color = typeof this.props.color === 'function' ? this.props.color(this.props.selector, this.props.styleKey) : this.props.color;\r\n\r\n        const styles = reactCSS({\r\n            'default': {\r\n                box: {\r\n                    marginBottom: '10px'\r\n                },\r\n                color: {\r\n                    width: '36px',\r\n                    height: '14px',\r\n                    borderRadius: '2px',\r\n                    background: color || 'black',\r\n                },\r\n                swatch: {\r\n                    padding: '5px',\r\n                    background: '#fff',\r\n                    borderRadius: '1px',\r\n                    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n                    display: 'inline-block',\r\n                    cursor: 'pointer',\r\n                    marginRight: '10px'\r\n                },\r\n                popover: {\r\n                    position: 'absolute',\r\n                    zIndex: '2',\r\n                },\r\n                cover: {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                },\r\n            },\r\n        });\r\n\r\n        return (\r\n            <div style={ styles.box }>\r\n                <label style={ styles.swatch } onClick={ this.handleClick }>\r\n                    <div style={ styles.color } />\r\n                </label>\r\n                {this.props.title}\r\n                { this.state.displayColorPicker ? <div style={ styles.popover }>\r\n                    <div style={ styles.cover } onClick={ this.handleClose }/>\r\n                    <SketchPicker color={ this.state.color } onChange={ this.setColor } />\r\n                </div> : null }\r\n\r\n            </div>\r\n        )\r\n        // return <label className={styles.color}>\r\n        //\r\n        //     <SketchPicker onChangeComplete={this.setColor}/> {this.props.title};\r\n        //     <input defaultValue={this.props.color} type=\"text\" onChange={this.setColor}/> {this.props.title}\r\n        // </label>;\r\n    }\r\n}","import {Jodit} from 'jodit';\r\nimport React, { Component } from 'react';\r\nimport Color from \"./Color\";\r\nimport tinycolor from \"tinycolor2\";\r\n\r\n\r\n\r\nexport default class Themes extends Component {\r\n    static resetStyles = null;\r\n\r\n    getValue = (selector, key) => {\r\n        if (this.props.theme[selector] && this.props.theme[selector][key] !== undefined) {\r\n            return this.props.theme[selector][key];\r\n        }\r\n        return '';\r\n    };\r\n    setValue = (selector, key, value) => {\r\n        const state = {...this.props.theme};\r\n        if (state[selector] === undefined) {\r\n            state[selector] = {};\r\n        }\r\n        if (state[selector][key] !== value) {\r\n            state[selector][key] = value;\r\n            this.props.setCSS(this.generateCss(state), state);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param state\r\n     * @return {string}\r\n     */\r\n    generateCss = (state) => {\r\n        const css = [];\r\n\r\n        Object.keys(state).forEach((selector) => {\r\n            // let elm = document.querySelector(selector);\r\n            css.push(`${selector.split(/,/g,).map((selector) => {\r\n                if (selector === '.jodit_container') {\r\n                    return selector\r\n                }\r\n                return '.jodit_container ' + selector;\r\n            }).join(',\\n')} {`);\r\n            let count = 0;\r\n\r\n            Object.keys(state[selector]).forEach((key) => {\r\n                key.split('|').forEach((subkey) => {\r\n                    let value = Themes.resetStyles[selector] ? Themes.resetStyles[selector][key] : null;\r\n                    if (value !== state[selector][key]) {\r\n                        css.push(`${Jodit.modules.Helpers.fromCamelCase(subkey)}: ${state[selector][key]};`);\r\n                        count += 1;\r\n                    }\r\n                });\r\n            });\r\n            if (count) {\r\n                css.push(`}`);\r\n            } else {\r\n                css.pop();\r\n            }\r\n\r\n        });\r\n\r\n        return css.join('\\n');\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!Themes.resetStyles) {\r\n            const resetStyles = {};\r\n            Object.keys(this.props.theme).forEach((selector) => {\r\n                let elm = document.querySelector(selector);\r\n                resetStyles[selector] = {};\r\n                if (elm) {\r\n                    const styles = window.getComputedStyle(elm);\r\n                    Object.keys(this.props.theme[selector]).forEach((key) => {\r\n                        let value = styles[key.split('|')[0]];\r\n                        resetStyles[selector][key] = key.match(/color|fill/i) ? Jodit.modules.Helpers.colorToHex(value) : value;\r\n                    });\r\n                }\r\n            });\r\n            Themes.resetStyles = resetStyles;\r\n            const state = Jodit.modules.Helpers.extend(true, {}, Themes.resetStyles);\r\n            this.props.setCSS(this.generateCss(state), state);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Color\r\n                selector=\".jodit_toolbar,.jodit_statusbar\"\r\n                styleKey=\"backgroundColor\"\r\n                color={this.getValue}\r\n                title=\"Toolbar background color\"\r\n                setColor={this.setValue}\r\n            />\r\n            <Color\r\n                selector=\".jodit_icon,.jodit_toolbar .jodit_toolbar_btn>a\"\r\n                styleKey=\"fill|color\"\r\n                bindValue={this.setValue.bind(this, '.jodit_toolbar>li.jodit_toolbar_btn.jodit_with_dropdownlist .jodit_with_dropdownlist-trigger', 'border-top-color')}\r\n                color={this.getValue}\r\n                title=\"Toolbar icon color\"\r\n                setColor={this.setValue}\r\n            />\r\n            <Color\r\n                selector=\".jodit_workplace,.jodit_toolbar,.jodit_statusbar,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-separator,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-break\"\r\n                styleKey=\"borderColor\"\r\n                color={this.getValue}\r\n                title=\"Toolbar border color\"\r\n                setColor={this.setValue}\r\n            />\r\n            <Color\r\n                selector=\".jodit_container\"\r\n                styleKey=\"backgroundColor\"\r\n                color={this.getValue}\r\n                title=\"Editor background color\"\r\n                setColor={this.setValue}\r\n            />\r\n            <Color\r\n                selector=\".jodit_wysiwyg\"\r\n                styleKey=\"color\"\r\n                bindValue={this.setValue.bind(this, '.jodit_placeholder', 'color')}\r\n                bindTransform={(color) => {\r\n                    color = tinycolor(color);\r\n                    color.setAlpha(.5);\r\n                    return color.toHex8String();\r\n                }}\r\n                color={this.getValue}\r\n                title=\"Editor text color\"\r\n                setColor={this.setValue}\r\n            />\r\n        </div>;\r\n    }\r\n}","export const LoremIpsum = `<p>\r\n    <img style=\"float:right; margin: 10px;\" src=\"https://xdsoft.net/jodit/files/download.jpg\" alt=\"Itaque nostrum est-quod nostrum dico, artis est-ad ea principia, quae accepimus.\"></p>\r\n<h1>Itaque nostrum est-quod nostrum dico, artis est-ad ea principia, quae accepimus.</h1>\r\n\r\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <i>Quonam, inquit, modo?</i> <mark>Illum mallem levares, quo optimum atque humanissimum virum, Cn.</mark> Quae quidem vel cum periculo est quaerenda vobis; Amicitiam autem adhibendam esse censent,\r\n    quia sit ex eo genere, quae prosunt. <a href=\"http://loripsum.net/\" target=\"_blank\">Duo Reges: constructio interrete.</a> Illud quaero, quid ei, qui in voluptate summum bonum ponat, consentaneum sit dicere. At vero illa, quae Peripatetici, quae Stoici\r\n    dicunt, semper tibi in ore sunt in iudiciis, in senatu. Dic in quovis conventu te omnia facere, ne doleas. Nummus in Croesi divitiis obscuratur, pars est tamen divitiarum. Isto modo ne improbos quidem, si essent boni viri. Luxuriam non reprehendit,\r\n    modo sit vacua infinita cupiditate et timore. Sit ista in Graecorum levitate perversitas, qui maledictis insectantur eos, a quibus de veritate dissentiunt. </p>\r\n\r\n<blockquote cite=\"http://loripsum.net\">\r\n    Nec enim absolvi beata vita sapientis neque ad exitum perduci poterit, si prima quaeque bene ab eo consulta atque facta ipsius oblivione obruentur.\r\n</blockquote>\r\n\r\n\r\n<pre>Tum ille: Tu autem cum ipse tantum librorum habeas, quos hic\r\ntandem requiris?\r\n\r\nPossumusne ergo in vita summum bonum dicere, cum id ne in\r\ncena quidem posse videamur?\r\n</pre>\r\n\r\n\r\n<ul>\r\n    <li>Possumusne ergo in vita summum bonum dicere, cum id ne in cena quidem posse videamur?</li>\r\n    <li>Quodsi vultum tibi, si incessum fingeres, quo gravior viderere, non esses tui similis;</li>\r\n</ul>\r\n\r\n\r\n<ol>\r\n    <li>Qui autem diffidet perpetuitati bonorum suorum, timeat necesse est, ne aliquando amissis illis sit miser.</li>\r\n    <li>Nulla profecto est, quin suam vim retineat a primo ad extremum.</li>\r\n</ol>\r\n\r\n\r\n<dl>\r\n    <dt><dfn>Falli igitur possumus.</dfn></dt>\r\n    <dd>Quid enim ab antiquis ex eo genere, quod ad disserendum valet, praetermissum est?</dd>\r\n    <dt><dfn>Scrupulum, inquam, abeunti;</dfn></dt>\r\n    <dd>Scio enim esse quosdam, qui quavis lingua philosophari possint;</dd>\r\n    <dt><dfn>Poterat autem inpune;</dfn></dt>\r\n    <dd>Tum ille: Tu autem cum ipse tantum librorum habeas, quos hic tandem requiris?</dd>\r\n    <dt><dfn>Beatum, inquit.</dfn></dt>\r\n    <dd>Respondeat totidem verbis.</dd>\r\n</dl>`","import React, {Component} from 'react';\nimport CheckBox from \"../checkbox/CheckBox\";\nimport Number from \"../number/Number\";\nimport List from \"../list/List\";\n\nexport default class Sizes extends Component {\n    render() {\n        return <>\n\n            <fieldset>\n                <legend>Sizes</legend>\n\n                {this.props.state.height === 'auto' ||\n                <CheckBox popupKey={\"allowResizeY\"} right name=\"allowResizeY\" onChange={this.props.setOption}\n                          checked={this.props.state.allowResizeY} label=\"Allow Height resize\"/>\n                }\n                <CheckBox popupKey={\"height\"} name=\"height\" onChange={this.props.setHeight}\n                          checked={this.props.state.height === 'auto'} label=\"Auto height\"/>\n\n                {this.props.state.height === 'auto' ||\n                <Number\n                    label=\"Height in pixels\"\n                    name=\"height\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.height}\n                />\n                }\n                <Number\n                    label=\"Min height(px)\"\n                    name=\"minHeight\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.minHeight}\n                />\n                <Number\n                    label=\"Max height(px)\"\n                    name=\"maxHeight\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.maxHeight}\n                />\n                {this.props.state.width === 'auto' ||\n                <CheckBox popupKey={\"allowResizeX\"} right name=\"allowResizeX\" onChange={this.props.setOption}\n                          checked={this.props.state.allowResizeX} label=\"Allow Width resize\"/>\n                }\n                <CheckBox popupKey={\"width\"} name=\"width\" onChange={this.props.setWidth}\n                          checked={this.props.state.width === 'auto'} label=\"Auto width\"/>\n                <Number\n                    label=\"Min width(px)\"\n                    name=\"minWidth\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.minWidth}\n                />\n                <Number\n                    label=\"Max width(px)\"\n                    name=\"maxWidth\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.maxWidth}\n                />\n\n                {this.props.state.width !== 'auto' ?\n                    <Number\n                        label=\"Width in pixels\"\n                        name=\"width\"\n                        onChange={this.props.setOption}\n                        value={this.props.state.width}\n                    /> : ''\n                }\n            </fieldset>\n            <fieldset>\n                <legend>Units</legend>\n                <List name=\"defaultFontSizePoints\" value={this.props.state.defaultFontSizePoints}\n                      onChange={this.props.setOption} list={{\n                    pt: 'Points',\n                    px: 'Pixels',\n                }} label=\"Font size units\"/>\n            </fieldset>\n        </>\n    }\n}","import React, { Component } from 'react';\r\nimport {Jodit} from 'jodit';\r\n\r\n\r\nimport JoditEditor from \"jodit-react\";\r\nimport style from './style.module.css';\r\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\r\nimport { agate as codeStyle} from 'react-syntax-highlighter/dist/cjs/styles/hljs';\r\n\r\nimport Tabs from \"../tab/Tabs\";\r\nimport Tab from \"../tab/Tab\";\r\nimport Options from \"./Options\";\r\nimport Buttons from \"./Buttons\";\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\nimport URL from \"../url/URL\";\r\nimport Text from \"../text/Text\";\r\nimport URLS from \"../url/URLS\";\r\nimport CopyText from \"../copytext/CopyText\";\r\nimport State from \"./State\";\r\nimport { http_build_query } from \"../../App\";\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport Plugins from \"../plugins/Plugins\";\r\nimport Themes from \"../themes/Themes\";\r\nimport { LoremIpsum } from \"./LoremIpsum\";\r\nimport Sizes from \"./Sizes\";\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\nSyntaxHighlighter.registerLanguage('css', css);\r\n\r\nconst history = createHistory();\r\n\r\n\r\nclass JoditMaster extends Component {\r\n    getDefaultState = () => {\r\n        return {\r\n            showLoremIpsum: true,\r\n            currentButtonsTab: null,\r\n            currentTab: this.props.config.currentTab,\r\n            workBoxWidth: 'auto',\r\n\r\n            buttons: {\r\n                buttons: [],// [...Jodit.defaultOptions.buttons],\r\n                buttonsMD: this.getButtons('buttonsMD'),\r\n                buttonsSM: this.getButtons('buttonsSM'),\r\n                buttonsXS: this.getButtons('buttonsXS')\r\n            },\r\n\r\n            removeButtons: {\r\n                buttons: [],\r\n                buttonsMD: this.getRemoveButtons('buttonsMD'),\r\n                buttonsSM: this.getRemoveButtons('buttonsSM'),\r\n                buttonsXS: this.getRemoveButtons('buttonsXS'),\r\n            },\r\n\r\n            activeIndex: {\r\n                buttons: 0,\r\n                buttonsMD: 0,\r\n                buttonsSM: 0,\r\n                buttonsXS: 0,\r\n            },\r\n\r\n            css: '',\r\n\r\n            theme: {\r\n                '.jodit_workplace,.jodit_toolbar,.jodit_statusbar,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-separator,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-break': {\r\n                    borderColor: '#ccc'\r\n                },\r\n                '.jodit_toolbar,.jodit_statusbar': {\r\n                    backgroundColor: '#ccccc',\r\n                },\r\n                '.jodit_icon,.jodit_toolbar .jodit_toolbar_btn>a': {\r\n                    'fill|color': '#ddd',\r\n                },\r\n                '.jodit_container': {\r\n                    'backgroundColor': '#ddd',\r\n                },\r\n                '.jodit_wysiwyg': {\r\n                    'color': '#ddd',\r\n                },\r\n            },\r\n\r\n            config: {\r\n                autofocus: Jodit.defaultOptions.autofocus,\r\n                useSearch: Jodit.defaultOptions.useSearch,\r\n                defaultFontSizePoints: Jodit.defaultOptions.defaultFontSizePoints,\r\n                toolbar: Jodit.defaultOptions.toolbar,\r\n                iframe: Jodit.defaultOptions.iframe,\r\n                iframeStyle: Jodit.defaultOptions.iframeStyle,\r\n\r\n                uploader: Jodit.defaultOptions.uploader,\r\n\r\n                textIcons: Jodit.defaultOptions.textIcons,\r\n                readonly: Jodit.defaultOptions.readonly,\r\n                spellcheck: Jodit.defaultOptions.spellcheck,\r\n                language: Jodit.defaultOptions.language,\r\n                direction: Jodit.defaultOptions.direction,\r\n                theme: Jodit.defaultOptions.theme,\r\n                toolbarButtonSize: Jodit.defaultOptions.toolbarButtonSize,\r\n                enter: Jodit.defaultOptions.enter,\r\n                defaultMode: Jodit.defaultOptions.defaultMode,\r\n                allowResizeY: Jodit.defaultOptions.allowResizeY,\r\n                allowResizeX: Jodit.defaultOptions.allowResizeX,\r\n\r\n                toolbarAdaptive: Jodit.defaultOptions.toolbarAdaptive,\r\n                toolbarSticky: Jodit.defaultOptions.toolbarSticky,\r\n                toolbarStickyOffset: Jodit.defaultOptions.toolbarStickyOffset,\r\n\r\n                showCharsCounter: Jodit.defaultOptions.showCharsCounter,\r\n                showWordsCounter: Jodit.defaultOptions.showWordsCounter,\r\n                showXPathInStatusbar: Jodit.defaultOptions.showXPathInStatusbar,\r\n\r\n                saveHeightInStorage: Jodit.defaultOptions.saveHeightInStorage,\r\n                saveModeInStorage: Jodit.defaultOptions.saveModeInStorage,\r\n\r\n                askBeforePasteHTML: Jodit.defaultOptions.askBeforePasteHTML,\r\n                askBeforePasteFromWord: Jodit.defaultOptions.askBeforePasteFromWord,\r\n                defaultActionOnPaste: Jodit.defaultOptions.defaultActionOnPaste,\r\n\r\n                disablePlugins: Jodit.defaultOptions.disablePlugins,\r\n\r\n                height:  Jodit.defaultOptions.height,\r\n                minHeight:  Jodit.defaultOptions.minHeight,\r\n                maxHeight:  Jodit.defaultOptions.maxHeight,\r\n                width:  Jodit.defaultOptions.width,\r\n                minWidth:  Jodit.defaultOptions.minWidth,\r\n                maxWidth:  Jodit.defaultOptions.maxWidth,\r\n                sizeLG: 800,\r\n            }\r\n        }\r\n    };\r\n\r\n    getButtons(type) {\r\n        return []//;Jodit.defaultOptions.buttonsXS.concat(this.getRemoveButtons(type))\r\n    }\r\n\r\n    getRemoveButtons(type) {\r\n        return [];\r\n        // return Jodit.defaultOptions.buttons.filter((key) => {\r\n        //     return key !== '|' && key !== '\\n' && Jodit.defaultOptions[type].indexOf(key) === -1\r\n        // })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const jodit = Jodit.make(this.editorRef, {\r\n            disablePlugins: 'mobile'\r\n        });\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            buttons: {\r\n                ...this.state.buttons,\r\n                buttons: jodit.toolbar.getButtonsNames()\r\n            }\r\n        });\r\n\r\n        jodit.destruct();\r\n    }\r\n\r\n    state = (((defaultState) => {\r\n        return {\r\n            ...defaultState,\r\n            css: defaultState.css || this.props.config.initialCSS || '',\r\n            config: {\r\n                ...defaultState.config,\r\n                ...this.props.config.initialConfig\r\n            }\r\n        };\r\n    })(this.getDefaultState()));\r\n\r\n    setButtonsTab = (value) => {\r\n        this.setState({\r\n            ...this.state,\r\n            currentButtonsTab: value\r\n        });\r\n    };\r\n\r\n    setTab = (value) => {\r\n        this.setState({\r\n            ...this.state,\r\n            currentTab: value\r\n        });\r\n    };\r\n\r\n    height = 150;\r\n    setHeight = (value) => {\r\n        this.setOption(value === true ? 'auto' : this.height, 'height')\r\n    };\r\n\r\n    width = 500;\r\n    setWidth = (value) => {\r\n        this.setOption(value === true ? 'auto' : this.width, 'width')\r\n    };\r\n\r\n    setButtons = (name, buttons, removeButtons, activeIndex) => {\r\n        const state = {...this.state};\r\n        let change = false;\r\n\r\n        if (this.state.buttons[name] !== buttons) {\r\n            state.buttons[name] = buttons;\r\n            change = true;\r\n        }\r\n\r\n        if (this.state.removeButtons[name] !== removeButtons) {\r\n            state.removeButtons[name] = removeButtons;\r\n            change = true;\r\n        }\r\n\r\n        if (change) {\r\n            state.config = {...state.config, [name]: buttons.filter((key) => removeButtons.indexOf(key) === -1)}\r\n        }\r\n\r\n        if (this.state.activeIndex[name] !== activeIndex) {\r\n            state.activeIndex[name] = activeIndex;\r\n            change = true;\r\n        }\r\n\r\n        if (change) {\r\n            this.setState(state);\r\n        }\r\n    };\r\n\r\n    timer;\r\n    toggleLoremIpsum = (showLoremIpsum) => {\r\n        if (!showLoremIpsum && this.value === LoremIpsum) {\r\n            this.value = '';\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            showLoremIpsum\r\n        });\r\n    };\r\n\r\n    setOption = (value, name) => {\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            switch (name) {\r\n                case 'height':\r\n                case 'width':\r\n                    if (value !== 'auto') {\r\n                        this[name] = value;\r\n                    }\r\n                    break;\r\n                default:\r\n            }\r\n\r\n            if (JSON.stringify(this.state[name]) !== JSON.stringify(value)) {\r\n                this.setState(prevState => {\r\n                    let newStage = {...prevState.config};\r\n\r\n                    if (name === 'iframe' && value ===  false) {\r\n                        newStage.iframeStyle = Jodit.defaultOptions.iframeStyle;\r\n                        newStage.iframeCSSLinks = Jodit.defaultOptions.iframeCSSLinks;\r\n                        newStage.iframeBaseUrl = Jodit.defaultOptions.iframeBaseUrl;\r\n                    }\r\n\r\n                    let link = newStage, keys = name.split('.');\r\n\r\n                    keys.forEach((key, index) => {\r\n                        if (index !== keys.length - 1) {\r\n                            link[key] = {...link[key]};\r\n                            link = link[key];\r\n                        }\r\n                    });\r\n\r\n                    name = keys[keys.length - 1];\r\n\r\n                    link[name] = value;\r\n\r\n                    return {\r\n                    ...prevState,\r\n                        config: newStage\r\n                    }\r\n                });\r\n\r\n            }\r\n        }, 100)\r\n    };\r\n\r\n    getCode = () => {\r\n        const getChangedOption = (config, defaultOptions) => {\r\n            const keys = Object.keys(config), options = Array.isArray(config) ? [] : {};\r\n\r\n            keys.forEach((key) => {\r\n                if (defaultOptions[key] !== undefined && JSON.stringify(config[key]) !== JSON.stringify(defaultOptions[key]) && ['sizeLG'].indexOf(key) === -1) {\r\n                    options[key] = typeof config[key] === 'object' ? getChangedOption(config[key], defaultOptions[key]) : config[key];\r\n                }\r\n            });\r\n\r\n            return options;\r\n        };\r\n\r\n        const options = getChangedOption(this.state.config, Jodit.defaultOptions);\r\n\r\n        ['buttons', 'buttonsMD', 'buttonsSM', 'buttonsXS'].forEach((key) => {\r\n            if (options[key]) {\r\n                options[key] = options[key].toString();\r\n            }\r\n        });\r\n\r\n        if (typeof this.props.config.setConfig === 'function') {\r\n            this.props.config.setConfig(options);\r\n        }\r\n\r\n        this.__isDefault = Object.keys(options).length === 0 && this.state.css === '';\r\n\r\n        const config = JSON.stringify(options, null, 2);\r\n\r\n        if (this.state.currentTab !== 'Options' && this.state.currentTab !== null) {\r\n            options.currentTab = this.state.currentTab;\r\n        }\r\n\r\n        if (this.props.config.historyAPI) {\r\n            history.push('?' + http_build_query(options), options)\r\n        }\r\n\r\n        return 'var editor = new Jodit(\"#editor\"' + (config !== '{}' ? ', '  + config + '' : '') + ');';\r\n    };\r\n\r\n    value = '';\r\n\r\n    onEditorChange = (value) => {\r\n        this.value = value;\r\n    };\r\n\r\n    setWorkboxWidth = (tab) => {\r\n        this.setState({\r\n            ...this.state,\r\n            workBoxWidth: tab.props.width\r\n        });\r\n\r\n        setTimeout(() => {\r\n            let event = document.createEvent(\"HTMLEvents\");\r\n            event.initEvent(\"resize\", true, true);\r\n            window.dispatchEvent(event);\r\n        }, 100);\r\n    };\r\n\r\n    setCSS = (css, theme) => {\r\n        this.setState({\r\n            ...this.state,\r\n            css: css || this.props.config.initialCSS,\r\n            theme\r\n        });\r\n    };\r\n\r\n    __isDefault = true;\r\n\r\n    editorRef;\r\n\r\n    isDefault = () => {\r\n        return this.__isDefault;\r\n    };\r\n\r\n    restoreDefault = () => {\r\n        if (window.confirm('Are you sure you want to restore the default settings?')) {\r\n            Themes.resetStyles = {};\r\n            this.setState({...this.getDefaultState()});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const code = this.getCode();\r\n\r\n        if (typeof this.props.config.setCode === 'function') {\r\n            this.props.config.setCode(code);\r\n        }\r\n\r\n        if (typeof this.props.config.setCSS === 'function' && this.state.css) {\r\n            this.props.config.setCSS(this.state.css);\r\n        }\r\n\r\n        return (\r\n            <div className={style.layout}>\r\n                <div className={style.leftside}>\r\n                    {this.props.config.showEditor &&\r\n                    <div>\r\n                        <div className={style.workbox} style={{width: this.state.workBoxWidth}}>\r\n                            <CheckBox\r\n                                name=\"showLoremIpsum\"\r\n                                onChange={this.toggleLoremIpsum}\r\n                                defaultChecked={this.state.showLoremIpsum}\r\n                                label=\"Show lorem ipsum text\"\r\n                            />\r\n                            <JoditEditor\r\n                                ref = {(ref) => this.editorRef = ref}\r\n                                onChange={this.onEditorChange}\r\n                                config={this.state.config}\r\n                                value={this.state.showLoremIpsum ? LoremIpsum : this.value}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    {this.props.config.showCode &&\r\n                    <div>\r\n                        <h2>Code</h2>\r\n                        <CopyText>\r\n                            <SyntaxHighlighter showLineNumbers={false} language='javascript'\r\n                                               style={codeStyle}>{code}</SyntaxHighlighter>\r\n                        </CopyText>\r\n                        {this.state.css && <React.Fragment>\r\n                            <h2>CSS</h2>\r\n                            <CopyText>\r\n                                <SyntaxHighlighter showLineNumbers={false} language='css' style={codeStyle}>{this.state.css}</SyntaxHighlighter>\r\n                            </CopyText>\r\n                        </React.Fragment>}\r\n                    </div>\r\n                    }\r\n                    {this.state.css && <style>{this.state.css}</style>}\r\n                </div>\r\n                <div className={style.rightside}>\r\n                    <div className={style.item}>\r\n                        <Tabs currentTab={this.state.currentTab} setTab={this.setTab}>\r\n                            <Tab label=\"Options\">\r\n                                {this.isDefault() || (<div className={style.defaultRestore}>\r\n                                    <button onClick={this.restoreDefault} type={\"button\"}>Restore defaults</button>\r\n                                </div>)}\r\n\r\n                                <Options\r\n                                    state={this.state.config}\r\n                                    height={this.height}\r\n                                    width={this.width}\r\n                                    setOption={this.setOption}\r\n                                    setHeight={this.setHeight}\r\n                                    setWidth={this.setWidth}\r\n                                />\r\n                            </Tab>\r\n                            <Tab label=\"Sizes\">\r\n                                <Sizes\r\n                                    state={this.state.config}\r\n                                    height={this.height}\r\n                                    width={this.width}\r\n                                    setOption={this.setOption}\r\n                                    setHeight={this.setHeight}\r\n                                    setWidth={this.setWidth}\r\n                                />\r\n                            </Tab>\r\n                            {this.props.config.showButtonsTab === false ||\r\n                                this.state.config.toolbar === false ||\r\n                                <Tab label=\"Buttons\">\r\n                                    <CheckBox popupKey=\"toolbarAdaptive\" name=\"toolbarAdaptive\" onChange={this.setOption} defaultChecked={this.state.config.toolbarAdaptive} label=\"Toolbar adaptive\"/>\r\n                                    <Tabs setTab={this.setButtonsTab} currentTab={this.state.currentButtonsTab}>\r\n                                        <Tab onClick={this.setWorkboxWidth} width={\"auto\"} label=\"Desktop\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttons} removeButtons={this.state.removeButtons.buttons} name=\"buttons\" setButtons={this.setButtons} buttons={this.state.buttons.buttons}/>\r\n                                        </Tab>\r\n                                        {!this.state.config.toolbarAdaptive ||\r\n                                        <Tab onClick={this.setWorkboxWidth} width={799} label=\"Medium(900px)\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttonsMD}\r\n                                                     removeButtons={this.state.removeButtons.buttonsMD} name=\"buttonsMD\"\r\n                                                     setButtons={this.setButtons} buttons={this.state.buttons.buttonsMD}/>\r\n                                        </Tab>\r\n                                        }\r\n                                        {!this.state.config.toolbarAdaptive ||\r\n                                        <Tab onClick={this.setWorkboxWidth} width={699} label=\"Tablet(700px)\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttonsSM}\r\n                                                     removeButtons={this.state.removeButtons.buttonsSM} name=\"buttonsSM\"\r\n                                                     setButtons={this.setButtons} buttons={this.state.buttons.buttonsSM}/>\r\n                                        </Tab>\r\n                                        }\r\n                                        {!this.state.config.toolbarAdaptive ||\r\n                                        <Tab onClick={this.setWorkboxWidth} width={399} label=\"Mobile(400px)\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttonsXS}\r\n                                                     removeButtons={this.state.removeButtons.buttonsXS} name=\"buttonsXS\"\r\n                                                     setButtons={this.setButtons} buttons={this.state.buttons.buttonsXS}/>\r\n                                        </Tab>\r\n                                        }\r\n                                    </Tabs>\r\n                                </Tab>\r\n                            }\r\n                            {this.state.config.iframe === false ||\r\n                            <Tab label=\"Iframe mode\">\r\n                                <URL\r\n                                    label=\"Iframe Base URL\"\r\n                                    name=\"iframeBaseUrl\"\r\n                                    onChange={this.setOption}\r\n                                    value={this.state.config.iframeBaseUrl}\r\n                                />\r\n                                <Text\r\n                                    label=\"iframe Default Style\"\r\n                                    name=\"iframeStyle\"\r\n                                    onChange={this.setOption}\r\n                                    value={this.state.config.iframeStyle}\r\n                                />\r\n                                <URLS\r\n                                    label=\"Iframe external stylesheets files\"\r\n                                    name=\"iframeCSSLinks\"\r\n                                    onChange={this.setOption}\r\n                                    value={this.state.config.iframeCSSLinks}\r\n                                />\r\n                            </Tab>\r\n                            }\r\n                            <Tab label=\"State\">\r\n                                <State\r\n                                    config={this.state.config}\r\n                                    setOption={this.setOption}\r\n                                />\r\n                            </Tab>\r\n                            <Tab label=\"Plugins\">\r\n                                <Plugins\r\n                                    config={this.state.config}\r\n                                    setOption={this.setOption}\r\n                                />\r\n                            </Tab>\r\n                            <Tab label=\"Themes\">\r\n                                <Themes theme={this.state.theme} setCSS={this.setCSS}/>\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JoditMaster;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport JoditMaster from \"./components/master/JoditMaster\";\n\nexport const urlencode = function (str) {\n    str = (str + '')\n\n    return encodeURIComponent(str)\n        .replace(/!/g, '%21')\n        .replace(/'/g, '%27')\n        .replace(/\\(/g, '%28')\n        .replace(/\\)/g, '%29')\n        .replace(/\\*/g, '%2A')\n};\n\nexport function http_build_query (formdata, numericPrefix, argSeparator) {\n    let encodeFunc = urlencode;\n\n    let value\n    let key\n    let tmp = []\n\n    let _httpBuildQueryHelper = function (key, val, argSeparator) {\n        let k\n        let tmp = []\n        if (val === true) {\n            val = true;\n        } else if (val === false) {\n            val = false;\n        }\n        if (val !== null) {\n            if (typeof val === 'object') {\n                for (k in val) {\n                    if (val[k] !== null) {\n                        tmp.push(_httpBuildQueryHelper(key + '[' + k + ']', val[k], argSeparator))\n                    }\n                }\n                return tmp.join(argSeparator)\n            } else if (typeof val !== 'function') {\n                return encodeFunc(key) + '=' + encodeFunc(val)\n            } else {\n                throw new Error('There was an error processing for http_build_query().')\n            }\n        } else {\n            return ''\n        }\n    }\n\n    if (!argSeparator) {\n        argSeparator = '&'\n    }\n    for (key in formdata) {\n        value = formdata[key]\n        if (numericPrefix && !isNaN(key)) {\n            key = String(numericPrefix) + key\n        }\n        let query = _httpBuildQueryHelper(key, value, argSeparator)\n        if (query !== '') {\n            tmp.push(query)\n        }\n    }\n\n    return tmp.join(argSeparator)\n}\n\nconst getParams = query => {\n    if (!query) {\n        return { };\n    }\n\n    return (/^[?#]/.test(query) ? query.slice(1) : query).split('&')\n        .reduce((params, param) => {\n            let [ key, value ] = param.split('=');\n\n            key = key\n                .replace(/%5B/g, '.')\n                .replace(/%5D/g, '')\n\n            let link = params, keys = key.split('.');\n            keys.forEach((name, index) => {\n                if (index !== keys.length - 1) {\n                    if (!link[name]) {\n                        link[name] = {};\n                    }\n                    link = link[name];\n                }\n            });\n\n            key = keys[keys.length - 1];\n\n            link[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n\n            if (link[key].toString().match(/^[0-9]+$/)) {\n                link[key] = parseInt(link[key], 10);\n            }\n\n            if (link[key] === 'true') {\n                link[key] = true;\n            }\n            if (link[key] === 'false') {\n                link[key] = false;\n            }\n\n\n            return params;\n        }, { });\n};\n\nclass App extends Component {\n  config;\n  constructor() {\n    super();\n\n    this.config = {...{\n        currentTab: null,\n        showCode: true,\n        showEditor: true,\n        showButtonsTab: true,\n        historyAPI: true,\n        dataURL: './',\n        setCSS: (css) => {},\n        setCode: (code) => {},\n        setConfig: (config) => {},\n        ready: () => {},\n        initialCSS: '',\n        initialConfig: {\n        },\n        ...window.JoditPlayConfig\n    }};\n\n    this.config.currentTab = getParams(window.location.search.substr(1))['currentTab'] || null;\n    this.config.initialConfig = {...this.config.initialConfig, ...getParams(window.location.search.substr(1))};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <JoditMaster config={this.config}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nif (!window.JoditPlayConfig) {\n    window.JoditPlayConfig = {\n        // dataURL: './',\n    };\n}\n\nwindow.JoditPlayReady = (element) => {\n    ReactDOM.render(<App />, element);\n};\n\nconst element = document.getElementById('root');\nelement && window.JoditPlayReady(element);\n"],"sourceRoot":""}