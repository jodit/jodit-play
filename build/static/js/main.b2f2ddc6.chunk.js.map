{"version":3,"sources":["components/button/style.module.css","components/list/style.module.css","components/checkbox/style.module.css","components/copytext/style.module.css","components/data/style.module.css","components/number/style.module.css","components/text/style.module.css","components/plugins/style.module.css","components/master/style.module.css","components/tab/style.module.css","components/tab/Tab.js","components/tab/Tabs.js","components/list/List.js","components/number/Number.js","components/data/Popup.js","components/checkbox/CheckBox.js","components/master/Options.js","components/button/Button.js","components/button/Separator.js","components/button/Break.js","components/master/Buttons.js","components/url/URL.js","components/text/Text.js","components/url/URLS.js","components/copytext/CopyText.js","components/master/State.js","components/plugins/Plugins.js","components/themes/Color.js","components/themes/Themes.js","components/master/LoremIpsum.js","components/master/Sizes.js","components/master/JoditMaster.js","App.js","index.js"],"names":["module","exports","Tab","this","props","children","Component","Tabs","openTab","event","setTab","target","innerText","links","currentActive","currentTab","tabs","filter","tab","type","map","index","label","active","push","key","className","style","button","buttonActive","onClick","header","List","onChange","refs","elm","value","name","listItems","Array","isArray","list","Object","keys","defaultValue","select","ref","Number","parseInt","Popup","state","content","findInfo","needle","data","checkInfo","setState","loadingState","loadData","updateContent","box","popup","window","JoditPlayConfig","dataURL","process","success","fetch","getMyPath","then","json","haystack","undefined","replace","shortText","length","callback","result","info","some","CheckBox","hovered","onBlur","clearTimeout","timeout","onHover","setTimeout","checked","onMouseEnter","onMouseLeave","right","defaultChecked","labelText","popupKey","Options","preset","setOption","custom","inline","toolbar","textIcons","toolbarButtonSize","toolbarSticky","toolbarStickyOffset","autofocus","useSearch","spellcheck","iframe","direction","language","Jodit","lang","theme","enter","defaultMode","MODE_WYSIWYG","MODE_SOURCE","MODE_SPLIT","showCharsCounter","showWordsCounter","showXPathInStatusbar","uploader","insertImageAsBase64URI","Button","toggle","setActive","moveUp","move","moveDown","onDoubleClick","row","row_active","row_disable","icon","dangerouslySetInnerHTML","__html","modules","Icon","get","lastCol","Separator","remove","e","stopPropagation","separator","colSpan","trash","Break","Buttons","toggleAll","buttons","removeButtons","forEach","indexOf","splice","setButtons","activeIndex","up","buttonsStart","slice","next","buf","buttonsEnd","addSeparator","getAttribute","restoreDefaults","confirm","defaultOptions","table","textAlign","padding","restore","title","data-separator","add","URL","placeholder","Text","URLS","parentNode","querySelector","plus","urls","call","querySelectorAll","input","concat","url","fill","CopyText","mode","textarea","document","createElement","body","appendChild","codebox","execCommand","removeChild","render","item","config","saveHeightInStorage","saveModeInStorage","readonly","askBeforePasteHTML","askBeforePasteFromWord","defaultActionOnPaste","INSERT_AS_HTML","INSERT_CLEAR_HTML","INSERT_AS_TEXT","INSERT_ONLY_TEXT","Plugins","togglePlugin","pluginName","plugins","disablePlugins","split","Boolean","toString","join","from","items","main","displayColorPicker","handleClick","handleClose","setColor","color","rgb","selector","styleKey","hex","bindValue","bindTransform","styles","reactCSS","marginBottom","width","height","borderRadius","background","swatch","boxShadow","display","cursor","marginRight","popover","position","zIndex","cover","top","bottom","left","Themes","getValue","setValue","setCSS","generateCss","css","count","subkey","resetStyles","Helpers","fromCamelCase","pop","getComputedStyle","match","colorToHex","extend","bind","tinycolor","setAlpha","toHex8String","LoremIpsum","Sizes","allowResizeY","setHeight","minHeight","maxHeight","allowResizeX","setWidth","minWidth","maxWidth","defaultFontSizePoints","pt","px","registerLanguage","js","history","createHistory","JoditMaster","defaultState","getDefaultState","showLoremIpsum","currentButtonsTab","workBoxWidth","buttonsMD","getButtons","buttonsSM","buttonsXS","getRemoveButtons","borderColor","backgroundColor","iframeStyle","toolbarAdaptive","sizeLG","initialCSS","initialConfig","setButtonsTab","change","toggleLoremIpsum","timer","JSON","stringify","prevState","newStage","iframeCSSLinks","iframeBaseUrl","link","getCode","options","getChangedOption","setConfig","__isDefault","historyAPI","http_build_query","onEditorChange","setWorkboxWidth","createEvent","initEvent","dispatchEvent","isDefault","restoreDefault","code","setCode","layout","leftside","showEditor","workbox","showCode","showLineNumbers","codeStyle","Fragment","rightside","defaultRestore","showButtonsTab","urlencode","str","encodeURIComponent","formdata","numericPrefix","argSeparator","encodeFunc","tmp","_httpBuildQueryHelper","val","k","Error","isNaN","String","query","getParams","test","reduce","params","param","decodeURIComponent","App","ready","location","search","substr","JoditPlayReady","element","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b2f2ddc6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__7qQty\",\"separator\":\"style_separator__2psV7\",\"row\":\"style_row__2TX94\",\"row_disable\":\"style_row_disable__2FFT_\",\"row_active\":\"style_row_active__1ZGWE\",\"icon\":\"style_icon__GX-gp\",\"moveDown\":\"style_moveDown__3AjG2\",\"moveUp\":\"style_moveUp__2S9pP\",\"trash\":\"style_trash__29vP3\",\"add\":\"style_add__7RkTu\",\"restore\":\"style_restore__2fmf2\",\"lastCol\":\"style_lastCol__3ZTeq\",\"info\":\"style_info__2n5vM\",\"fill\":\"style_fill__E0PIu\",\"label\":\"style_label__HkAAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"style_list__1lIG0\",\"label\":\"style_label__2XQeQ\",\"select\":\"style_select__RjESN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__1DMCT\",\"labelText\":\"style_labelText__1QvWS\",\"right\":\"style_right__1GLWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"style_item__1Hqts\",\"button\":\"style_button__2qNs4\",\"copied\":\"style_copied__1crrM\",\"ready\":\"style_ready__18pc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"style_box__1ibXL\",\"popup\":\"style_popup__1nclg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__1Qzzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__1tU4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__FDSDa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"style_layout__3ZBP-\",\"rightside\":\"style_rightside__27SmD\",\"leftside\":\"style_leftside__1BPts\",\"item\":\"style_item__2VXQG\",\"defaultRestore\":\"style_defaultRestore__5mBZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"style_tab__1JKbX\",\"active\":\"style_active__ugHys\",\"header\":\"style_header__q0Xg6\",\"button\":\"style_button__2Q5NL\",\"buttonActive\":\"style_buttonActive__3ccvn\"};","import React, { Component } from 'react';\r\n\r\nexport default class Tab extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\nimport Tab from \"./Tab\";\r\n\r\nexport default class Tabs extends Component {\r\n    openTab = (event) => {\r\n        this.props.setTab(event.target.innerText);\r\n    };\r\n    render() {\r\n        let links = [],\r\n            currentActive = this.props.currentTab;\r\n\r\n        const tabs = this.props.children.filter((tab) => tab.type === Tab).map((tab, index) => {\r\n            if (!currentActive) {\r\n                currentActive  =  tab.props.label\r\n            }\r\n\r\n            let active = tab.props.label === currentActive;\r\n\r\n            links.push(<span key={index} className={style.button + (active ? ' ' + style.buttonActive : '')} onClick={(event) => {\r\n                tab.props.onClick && tab.props.onClick(tab);\r\n                this.openTab(event);\r\n            }}>{tab.props.label}</span>);\r\n\r\n            if (!active) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <div key={index} className={style.tab + (active ? ' ' + style.active : '')}> {tab} </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className={style.tabs}>\r\n                <div className={style.header}>\r\n                    {links}\r\n                </div>\r\n                {tabs}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class List extends Component {\r\n    onChange = () => {\r\n        this.props.onChange && this.props.onChange(this.refs.elm.value, this.props.name);\r\n    };\r\n    render() {\r\n        const keys = Array.isArray(this.props.list) ? this.props.list : Object.keys(this.props.list);\r\n\r\n        const listItems = keys.map((key) => (\r\n            <option key={key} value={key}>\r\n                {Array.isArray(this.props.list) ? key : this.props.list[key]}\r\n            </option>\r\n        ));\r\n\r\n        return (\r\n            <div className={style.list}>\r\n                <label className={style.label}>\r\n                    {this.props.label}\r\n                </label>\r\n                <select defaultValue={this.props.value} className={style.select} ref=\"elm\" onChange={this.onChange}>\r\n                    {listItems}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Number extends Component {\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(parseInt(event.target.value, 10), this.props.name);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <input onChange={this.onChange} type=\"number\" defaultValue={this.props.value}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Popup extends Component {\r\n    static loadingState = false;\r\n    static data = null;\r\n\r\n    static getMyPath() {\r\n        // let a = document.createElement('A');\r\n        // a.href = window.JoditPlayConfig.curScriptElement.src;\r\n        // let path = a.pathname.split('/');\r\n        return window.JoditPlayConfig.dataURL || process.env.PUBLIC_URL\r\n    }\r\n\r\n    static loadData(success) {\r\n        fetch(Popup.getMyPath() + 'data.json')\r\n            .then((data) => {\r\n                return data.json();\r\n            })\r\n            .then((data) => {\r\n                Popup.data = data;\r\n                success();\r\n            })\r\n    }\r\n\r\n    static checkInfo(needle, haystack) {\r\n        if (haystack.name !== undefined && haystack.name.replace(/\"/g, '') === needle) {\r\n            return Popup.findInfo(needle, haystack, (needle, haystack) => {\r\n                if (haystack.shortText && haystack.shortText.replace(/\\s/g, '').length) {\r\n                    return haystack.shortText;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    static findInfo(needle, haystack, callback) {\r\n        const info = callback(needle, haystack);\r\n\r\n        if (info) {\r\n            return info;\r\n        }\r\n\r\n        if (typeof haystack === 'object') {\r\n            let result;\r\n\r\n            Object.keys(haystack).some((key) => {\r\n                result = Popup.findInfo(needle, haystack[key], callback);\r\n\r\n                if (result) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    state = {\r\n        content: ''\r\n    };\r\n\r\n    updateContent() {\r\n        const content = Popup.findInfo(this.props.needle, Popup.data, Popup.checkInfo) || 'Not found';\r\n        if (this.state.content !== content) {\r\n            this.setState({\r\n                content\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (!Popup.data && !Popup.loadingState) {\r\n            Popup.loadingState = true;\r\n            Popup.loadData(() => {\r\n                this.updateContent();\r\n            });\r\n        }\r\n        if (Popup.data) {\r\n            this.updateContent();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className={style.box}>\r\n            <div className={style.popup}>\r\n                {this.state.content || <span>Loading ...</span>}\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\nimport Toggle from 'react-toggle'\r\nimport \"react-toggle/style.css\"\r\nimport Popup from \"../data/Popup\";\r\n\r\nexport default class CheckBox extends Component {\r\n    state = {\r\n        hovered: false\r\n    };\r\n    timeout;\r\n    onBlur = (event) => {\r\n        window.clearTimeout(this.timeout);\r\n        if (this.state.hovered) {\r\n            this.setState({\r\n                hovered: false\r\n            });\r\n        }\r\n\r\n    };\r\n    onHover = (event) => {\r\n        this.timeout =  window.setTimeout(() => {\r\n            if (!this.state.hovered) {\r\n                this.setState({\r\n                    hovered: true\r\n                });\r\n            }\r\n        }, 300);\r\n    };\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(event.target.checked, this.props.name);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onMouseEnter={this.onHover} onMouseLeave={this.onBlur} className={style.label + (this.props.right ? ' ' + style.right : '')}>\r\n                <label>\r\n                    {this.props.checked !== undefined ?\r\n                        <Toggle\r\n                            defaultChecked={this.props.defaultChecked}\r\n                            checked={this.props.checked}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        :\r\n                        <Toggle\r\n                            defaultChecked={this.props.defaultChecked}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    }\r\n                    <span className={style.labelText}>{this.props.label}</span>\r\n                </label>\r\n                {this.props.popupKey && this.state.hovered && <Popup needle={this.props.popupKey}/>}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Jodit} from \"jodit\";\r\nimport List from \"../list/List\";\r\nimport Number from \"../number/Number\";\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\n\r\nexport default class Options extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <List name=\"preset\" value={this.props.state.preset} onChange={this.props.setOption} list={{\r\n                    custom: 'None',\r\n                    inline: 'Inline Mode',\r\n                }} label=\"Presets\"/>\r\n\r\n                <fieldset>\r\n                    <legend>Toolbar</legend>\r\n                    <CheckBox popupKey={\"toolbar\"} name=\"toolbar\" onChange={this.props.setOption} checked={this.props.state.toolbar} label=\"Show Toolbar\"/>\r\n                    {this.props.state.toolbar === false ||\r\n                    <CheckBox\r\n                        popupKey={\"textIcons\"}\r\n                        name=\"textIcons\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.textIcons}\r\n                        label=\"Text Icons\"\r\n                    />\r\n                    }\r\n                    {this.props.state.toolbar === false ||\r\n                    <List value={this.props.state.toolbarButtonSize} name=\"toolbarButtonSize\"\r\n                          onChange={this.props.setOption} list={[\r\n                        \"tiny\", \"xsmall\", \"small\", \"middle\", \"large\"\r\n                    ]} label=\"Size of icons\"/>\r\n                    }\r\n                    {this.props.state.toolbar === false ||\r\n                    <CheckBox popupKey={\"toolbarSticky\"} name=\"toolbarSticky\" onChange={this.props.setOption} checked={this.props.state.toolbarSticky} label=\"Sticky Toolbar\"/>\r\n                    }\r\n\r\n                    {this.props.state.toolbar === false || this.props.state.toolbarSticky === false ||\r\n                    <Number\r\n                        label=\"Sticky offset\"\r\n                        name=\"toolbarStickyOffset\"\r\n                        onChange={this.props.setOption}\r\n                        value={this.props.state.toolbarStickyOffset}\r\n                    />\r\n                    }\r\n                </fieldset>\r\n                <CheckBox popupKey={\"autofocus\"} name=\"autofocus\" onChange={this.props.setOption} checked={this.props.state.autofocus} label=\"Autofocus\"/>\r\n\r\n                <CheckBox popupKey={\"useSearch\"} name=\"useSearch\" onChange={this.props.setOption} checked={this.props.state.useSearch} label=\"Use search\"/>\r\n\r\n                <CheckBox popupKey={\"spellcheck\"} name=\"spellcheck\" onChange={this.props.setOption} checked={this.props.state.spellcheck} label=\"Spell Check\"/>\r\n                <CheckBox popupKey={\"iframe\"} name=\"iframe\" onChange={this.props.setOption} checked={this.props.state.iframe} label=\"Iframe mode\"/>\r\n\r\n                <List value={this.props.state.direction} name=\"direction\" onChange={this.props.setOption} list={{'': 'auto', 'rtl': 'rtl', 'ltr': 'ltr'}} label=\"Direction\"/>\r\n                <List value={this.props.state.language} name=\"language\" onChange={this.props.setOption} list={['Auto', ...Object.keys(Jodit.lang)]} label=\"Language\"/>\r\n\r\n                <List value={this.props.state.theme} name=\"theme\" onChange={this.props.setOption} list={{\r\n                    'default' : 'Default',\r\n                    'dark' : 'Dark',\r\n                }} label=\"Theme\"/>\r\n\r\n                <List name=\"enter\" value={this.props.state.enter} onChange={this.props.setOption} list={{\r\n                    \"P\": 'Paragraph (P)',\r\n                    \"DIV\": 'Block (DIV)',\r\n                    \"BR\": 'Break (BR)',\r\n                }} label=\"Element that will be created on Enter\"/>\r\n\r\n\r\n                <List name=\"defaultMode\" value={this.props.state.defaultMode} onChange={this.props.setOption} list={{\r\n                    [Jodit.MODE_WYSIWYG]: 'WYSIWYG',\r\n                    [Jodit.MODE_SOURCE]: 'Source code',\r\n                    [Jodit.MODE_SPLIT]: 'Split code',\r\n                }} label=\"Default mode\"/>\r\n\r\n                <fieldset>\r\n                    <legend>Status bar</legend>\r\n                    <CheckBox\r\n                        popupKey={\"showCharsCounter\"}\r\n                        name=\"showCharsCounter\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.showCharsCounter}\r\n                        label=\"Show chars counter\"\r\n                    />\r\n                    <CheckBox\r\n                        popupKey={\"showWordsCounter\"}\r\n                        name=\"showWordsCounter\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.showWordsCounter}\r\n                        label=\"Show words counter\"\r\n                    />\r\n                    <CheckBox\r\n                        popupKey={\"showXPathInStatusbar\"}\r\n                        name=\"showXPathInStatusbar\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.showXPathInStatusbar}\r\n                        label=\"Show path to selected element\"\r\n                    />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>Uploader</legend>\r\n                    <CheckBox\r\n                        name=\"uploader.insertImageAsBase64URI\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.uploader.insertImageAsBase64URI}\r\n                        label=\"Insert image as Base64 URI\"\r\n                    />\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\nimport {Jodit} from \"jodit\";\r\n\r\n\r\nexport default class Button extends Component {\r\n    toggle = (active) => {\r\n        this.props.toggle(this.props.index, active);\r\n    };\r\n    setActive = () => {\r\n        this.props.setActive(this.props.index);\r\n    };\r\n    moveUp = () => {\r\n        this.props.move(this.props.index, true)\r\n    };\r\n    moveDown = () => {\r\n        this.props.move(this.props.index, false)\r\n    };\r\n    render() {\r\n        return <tr onDoubleClick={this.setActive} className={style.row + ' ' + (this.props.active ? style.row_active : '')+ ' ' + (!this.props.checked ? style.row_disable : '')}>\r\n            <td>\r\n                <div className={style.icon} dangerouslySetInnerHTML={{__html:Jodit.modules.Icon.get(this.props.label)}}/>\r\n            </td>\r\n            <td>\r\n                {this.props.label}\r\n            </td>\r\n            <td>\r\n                <span onClick={this.moveUp} className={style.moveUp}></span>\r\n                <span onClick={this.moveDown} className={style.moveDown}></span>\r\n            </td>\r\n            <td  className={style.lastCol}>\r\n                <CheckBox checked={this.props.checked} onChange={this.toggle}/>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Separator extends Component {\r\n    remove = (e) => {\r\n        this.props.remove(this.props.index);\r\n        e.stopPropagation()\r\n    };\r\n    setActive = () => {\r\n        this.props.setActive(this.props.index);\r\n    };\r\n    moveUp = () => {\r\n        this.props.move(this.props.index, true)\r\n    };\r\n    moveDown = () => {\r\n        this.props.move(this.props.index, false)\r\n    };\r\n    render() {\r\n        return <tr onDoubleClick={this.setActive} className={style.row + ' ' + style.separator + ' ' + (this.props.active ? style.row_active : '')}>\r\n            <td colSpan={2}>\r\n               Group separator\r\n            </td>\r\n            <td>\r\n                <span onClick={this.moveUp} className={style.moveUp}></span>\r\n                <span onClick={this.moveDown} className={style.moveDown}></span>\r\n            </td>\r\n            <td className={style.lastCol}>\r\n                <span onClick={this.remove} className={style.trash}></span>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Break extends Component {\r\n    remove = (e) => {\r\n        this.props.remove(this.props.index);\r\n        e.stopPropagation()\r\n    };\r\n    setActive = () => {\r\n        this.props.setActive(this.props.index);\r\n    };\r\n    moveUp = () => {\r\n        this.props.move(this.props.index, true)\r\n    };\r\n    moveDown = () => {\r\n        this.props.move(this.props.index, false)\r\n    };\r\n    render() {\r\n        return <tr onDoubleClick={this.setActive} className={style.row + ' ' + style.separator + ' ' + (this.props.active ? style.row_active : '')}>\r\n            <td colSpan={2}>\r\n               Break\r\n            </td>\r\n            <td>\r\n                <span onClick={this.moveUp} className={style.moveUp}></span>\r\n                <span onClick={this.moveDown} className={style.moveDown}></span>\r\n            </td>\r\n            <td className={style.lastCol}>\r\n                <span onClick={this.remove} className={style.trash}></span>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from \"../button/Button\";\r\nimport style from '../button/style.module.css';\r\nimport Separator from \"../button/Separator\";\r\nimport Break from \"../button/Break\";\r\nimport {Jodit} from \"jodit\";\r\n\r\n\r\nexport default class Buttons extends Component {\r\n    toggleAll = () => {\r\n        const buttons = [...this.props.buttons];\r\n        const removeButtons = [...this.props.removeButtons];\r\n\r\n        buttons.forEach((button, index) => {\r\n            if (removeButtons.indexOf(button) !== -1) {\r\n                removeButtons.splice(removeButtons.indexOf(button), 1);\r\n            } else {\r\n                removeButtons.push(button);\r\n            }\r\n        });\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            buttons,\r\n            removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    toggle = (index, active) => {\r\n        const button = this.props.buttons[index];\r\n        const removeButtons = [...this.props.removeButtons];\r\n\r\n        if (removeButtons.indexOf(button) !== -1 && active) {\r\n            removeButtons.splice(removeButtons.indexOf(button), 1);\r\n        } else {\r\n            !active && removeButtons.push(button);\r\n        }\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            this.props.buttons,\r\n            removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    move = (index, up) => {\r\n        const buttonsStart = this.props.buttons.slice();\r\n        const next = index + (up ? -1 : 1);\r\n        const buf = buttonsStart[index];\r\n\r\n        buttonsStart[index] = buttonsStart[next];\r\n        buttonsStart[next] = buf;\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            buttonsStart,\r\n            this.props.removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    remove = (index) => {\r\n        const buttonsStart = this.props.buttons.slice(0, index);\r\n        const buttonsEnd = this.props.buttons.slice(index + 1);\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            [...buttonsStart, ...buttonsEnd],\r\n            this.props.removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n\r\n    addSeparator = (event) => {\r\n        const buttonsStart = this.props.buttons.slice(0, this.props.activeIndex);\r\n        const buttonsEnd = this.props.buttons.slice(this.props.activeIndex);\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            [...buttonsStart, event.target.getAttribute('data-separator'), ...buttonsEnd],\r\n            this.props.removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    setActive = (index) => {\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            this.props.buttons,\r\n            this.props.removeButtons,\r\n            index\r\n        );\r\n    };\r\n    restoreDefaults = () => {\r\n        if (window.confirm('Are you shure?')) {\r\n            this.props.setButtons( this.props.name, Jodit.defaultOptions[this.props.name], [], 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const list = this.props.buttons.map((key, index) => {\r\n            switch (key) {\r\n                case \"\\n\":\r\n                    return <Break move={this.move} remove={this.remove} setActive={this.setActive} active={this.props.activeIndex === index} label={key} index={index} key={index}/>;\r\n                case \"|\":\r\n                    return <Separator move={this.move} remove={this.remove} setActive={this.setActive} active={this.props.activeIndex === index} label={key} index={index} key={index}/>;\r\n                default:\r\n                    return <Button move={this.move} checked={this.props.removeButtons.indexOf(key) === -1} toggle={this.toggle} setActive={this.setActive} active={this.props.activeIndex === index} label={key} index={index} key={index}/>\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <table className={style.table}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td colSpan={5} style={{textAlign: \"right\", padding: \"5px 0\"}}>\r\n                            <span onClick={this.restoreDefaults} className={style.restore} title=\"Restore default\"></span>\r\n                            <span onClick={this.addSeparator} data-separator={\"\\n\"} className={style.add} title=\"Add Break\">Break</span>\r\n                            <span onClick={this.addSeparator} data-separator=\"|\" className={style.add} title=\"Add Separator\">Separator</span>\r\n                            <span onClick={this.toggleAll} className={style.restore} title=\"Toggle all\">Toggle all</span>\r\n                        </td>\r\n                    </tr>\r\n                    {list}\r\n                    </tbody>\r\n\r\n                </table>\r\n                <p className={style.info}>Double-Click selected row</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from '../button/style.module.css';\r\n\r\nexport default class URL extends Component {\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(event.target.value, this.props.name);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <input placeholder=\"https://\" onChange={this.onChange} type=\"url\" defaultValue={this.props.value}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Text extends Component {\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(event.target.value, this.props.name);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <textarea onChange={this.onChange} defaultValue={this.props.value}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from '../button/style.module.css';\r\n\r\nexport default class URLS extends Component {\r\n    add = () => {\r\n        this.onChange(['']);\r\n    };\r\n    remove = (event) => {\r\n        let tr = event.target.parentNode.parentNode;\r\n        tr.querySelector('input').value = '';\r\n\r\n        this.onChange();\r\n    };\r\n\r\n    onChange = (plus) => {\r\n        let  urls = [];\r\n        urls = [].slice.call(this.refs.table.querySelectorAll('input')).map(input => input.value).filter(elm => elm);\r\n\r\n        if (Array.isArray(plus)) {\r\n            urls = urls.concat(plus);\r\n        }\r\n\r\n        this.props.onChange && this.props.onChange(urls, this.props.name);\r\n    };\r\n\r\n    render() {\r\n        const urls = ((this.props.value && Array.isArray(this.props.value) && this.props.value.length) ? this.props.value : ['']).map((url, index) => {\r\n            return (<tr key={index + '' + url}>\r\n                <td>\r\n                    <input placeholder=\"https://\" onBlur={this.onChange} type=\"url\"  defaultValue={url}/>\r\n                </td>\r\n                <td className={style.fill}>\r\n                    <span onClick={this.add} className={style.add}></span>\r\n                    <span onClick={this.remove} className={style.trash}></span>\r\n                </td>\r\n            </tr>);\r\n        });\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <table className={style.table} ref=\"table\">\r\n                    <tbody>\r\n                      {urls}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class CopyText extends Component {\r\n    state = {\r\n        mode: 'ready'\r\n    };\r\n\r\n    onClick = () => {\r\n        const textarea = document.createElement('textarea');\r\n\r\n        document.body.appendChild(textarea);\r\n        textarea.value = this.refs.codebox.innerText;\r\n        textarea.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(textarea);\r\n\r\n        this.setState({\r\n            mode: 'copied'\r\n        });\r\n\r\n        setTimeout(() => {\r\n            if (this.state.mode === 'copied') {\r\n                this.setState({\r\n                    mode: 'ready'\r\n                });\r\n            }\r\n        }, 1000);\r\n    };\r\n    render = () => (\r\n        <div className={style.item}>\r\n            <button className={style.button + ' ' + style[this.state.mode]} onClick={this.onClick} type=\"button\">\r\n                {this.state.mode === 'ready' ? 'Copy code' : 'Copied!'}\r\n            </button>\r\n            <div ref=\"codebox\">\r\n                {this.props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport List from \"../list/List\";\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\nimport {Jodit} from 'jodit';\r\n\r\nexport default class state extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CheckBox\r\n                    popupKey={\"saveHeightInStorage\"}\r\n                    name=\"saveHeightInStorage\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.saveHeightInStorage}\r\n                    label=\"Save height in storage\"\r\n                />\r\n                <CheckBox\r\n                    popupKey={\"saveModeInStorage\"}\r\n                    name=\"saveModeInStorage\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.saveModeInStorage}\r\n                    label=\"Save mode in storage\"\r\n                />\r\n                <CheckBox popupKey={\"readonly\"} name=\"readonly\" onChange={this.props.setOption} checked={this.props.config.readonly} label=\"Read Only\"/>\r\n                <hr/>\r\n                <CheckBox\r\n                    popupKey={\"askBeforePasteHTML\"}\r\n                    name=\"askBeforePasteHTML\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.askBeforePasteHTML}\r\n                    label=\"Ask before paste HTML\"\r\n                />\r\n                <CheckBox\r\n                    popupKey={\"askBeforePasteFromWord\"}\r\n                    name=\"askBeforePasteFromWord\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.askBeforePasteFromWord}\r\n                    label=\"Ask before paste from Word/Excel\"\r\n                />\r\n                <List value={this.props.config.defaultActionOnPaste} name=\"defaultActionOnPaste\" onChange={this.props.setOption} list={{\r\n                    [Jodit.INSERT_AS_HTML] : 'Insert as HTML',\r\n                    [Jodit.INSERT_CLEAR_HTML] : 'Insert cleared HTML',\r\n                    [Jodit.INSERT_AS_TEXT] : 'Insert as plain text',\r\n                    [Jodit.INSERT_ONLY_TEXT] : 'Insert only text',\r\n                }} label=\"Default insert method\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport style from './style.module.css';\r\nimport {Jodit} from 'jodit';\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\n\r\nexport default class Plugins extends Component {\r\n\ttogglePlugin = (value, pluginName) => {\r\n\t\tlet plugins = Array.isArray(this.props.config.disablePlugins) ?\r\n      [...this.props.config.disablePlugins] :\r\n      [...this.props.config.disablePlugins.split(/[\\s,]+/)];\r\n\r\n\t\tplugins = plugins.filter(Boolean);\r\n\r\n\t\tif (plugins.indexOf(pluginName) === -1 && !value) {\r\n\t\t\tplugins.push(pluginName);\r\n\t\t}\r\n\r\n\t\tif (plugins.indexOf(pluginName) !== -1 && value) {\r\n\t\t\tplugins.splice(plugins.indexOf(pluginName), 1);\r\n\t\t}\r\n\r\n\t\tif (plugins.toString() !== this.props.config.disablePlugins.toString()) {\r\n\t\t\tthis.props.setOption(plugins.length ? plugins.join(',') : [], 'disablePlugins');\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst plugins = Array.from(Jodit.plugins.items.keys()).map((pluginName) =>\r\n\t\t\t<CheckBox\r\n\t\t\t\tpopupKey={'plugins/' + pluginName}\r\n\t\t\t\tkey={pluginName}\r\n\t\t\t\tname={pluginName}\r\n\t\t\t\tonChange={this.togglePlugin}\r\n\t\t\t\tdefaultChecked={this.props.config.disablePlugins.indexOf(pluginName) === -1}\r\n\t\t\t\tlabel={pluginName}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className={style.main}>\r\n\t\t\t\t{plugins}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport reactCSS from 'reactcss'\r\n// import styles from \"./style.module.css\";\r\nimport { SketchPicker } from 'react-color';\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        displayColorPicker: false,\r\n    };\r\n    handleClick = () => {\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    setColor = (color) => {\r\n        this.setState({ color: color.rgb });\r\n        this.props.setColor(this.props.selector, this.props.styleKey, color.hex);\r\n        if (this.props.bindValue) {\r\n            this.props.bindValue(this.props.bindTransform ? this.props.bindTransform(color.hex) : color.hex);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let color = typeof this.props.color === 'function' ? this.props.color(this.props.selector, this.props.styleKey) : this.props.color;\r\n\r\n        const styles = reactCSS({\r\n            'default': {\r\n                box: {\r\n                    marginBottom: '10px'\r\n                },\r\n                color: {\r\n                    width: '36px',\r\n                    height: '14px',\r\n                    borderRadius: '2px',\r\n                    background: color || 'black',\r\n                },\r\n                swatch: {\r\n                    padding: '5px',\r\n                    background: '#fff',\r\n                    borderRadius: '1px',\r\n                    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n                    display: 'inline-block',\r\n                    cursor: 'pointer',\r\n                    marginRight: '10px'\r\n                },\r\n                popover: {\r\n                    position: 'absolute',\r\n                    zIndex: '2',\r\n                },\r\n                cover: {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                },\r\n            },\r\n        });\r\n\r\n        return (\r\n            <div style={ styles.box }>\r\n                <label style={ styles.swatch } onClick={ this.handleClick }>\r\n                    <div style={ styles.color } />\r\n                </label>\r\n                {this.props.title}\r\n                { this.state.displayColorPicker ? <div style={ styles.popover }>\r\n                    <div style={ styles.cover } onClick={ this.handleClose }/>\r\n                    <SketchPicker color={ this.state.color } onChange={ this.setColor } />\r\n                </div> : null }\r\n\r\n            </div>\r\n        )\r\n        // return <label className={styles.color}>\r\n        //\r\n        //     <SketchPicker onChangeComplete={this.setColor}/> {this.props.title};\r\n        //     <input defaultValue={this.props.color} type=\"text\" onChange={this.setColor}/> {this.props.title}\r\n        // </label>;\r\n    }\r\n}","import {Jodit} from 'jodit';\r\nimport React, { Component } from 'react';\r\nimport Color from \"./Color\";\r\nimport tinycolor from \"tinycolor2\";\r\n\r\n\r\n\r\nexport default class Themes extends Component {\r\n    static resetStyles = null;\r\n\r\n    getValue = (selector, key) => {\r\n        if (this.props.theme[selector] && this.props.theme[selector][key] !== undefined) {\r\n            return this.props.theme[selector][key];\r\n        }\r\n        return '';\r\n    };\r\n    setValue = (selector, key, value) => {\r\n        const state = {...this.props.theme};\r\n        if (state[selector] === undefined) {\r\n            state[selector] = {};\r\n        }\r\n        if (state[selector][key] !== value) {\r\n            state[selector][key] = value;\r\n            this.props.setCSS(this.generateCss(state), state);\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param state\r\n     * @return {string}\r\n     */\r\n    generateCss = (state) => {\r\n        const css = [];\r\n\r\n        Object.keys(state).forEach((selector) => {\r\n            // let elm = document.querySelector(selector);\r\n            css.push(`${selector.split(/,/g,).map((selector) => {\r\n                if (selector === '.jodit_container') {\r\n                    return selector\r\n                }\r\n                return '.jodit_container ' + selector;\r\n            }).join(',\\n')} {`);\r\n            let count = 0;\r\n\r\n            Object.keys(state[selector]).forEach((key) => {\r\n                key.split('|').forEach((subkey) => {\r\n                    let value = Themes.resetStyles[selector] ? Themes.resetStyles[selector][key] : null;\r\n                    if (value !== state[selector][key]) {\r\n                        css.push(`${Jodit.modules.Helpers.fromCamelCase(subkey)}: ${state[selector][key]};`);\r\n                        count += 1;\r\n                    }\r\n                });\r\n            });\r\n            if (count) {\r\n                css.push(`}`);\r\n            } else {\r\n                css.pop();\r\n            }\r\n\r\n        });\r\n\r\n        return css.join('\\n');\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!Themes.resetStyles) {\r\n            const resetStyles = {};\r\n            Object.keys(this.props.theme).forEach((selector) => {\r\n                let elm = document.querySelector(selector);\r\n                resetStyles[selector] = {};\r\n                if (elm) {\r\n                    const styles = window.getComputedStyle(elm);\r\n                    Object.keys(this.props.theme[selector]).forEach((key) => {\r\n                        let value = styles[key.split('|')[0]];\r\n                        resetStyles[selector][key] = key.match(/color|fill/i) ? Jodit.modules.Helpers.colorToHex(value) : value;\r\n                    });\r\n                }\r\n            });\r\n            Themes.resetStyles = resetStyles;\r\n            const state = Jodit.modules.Helpers.extend(true, {}, Themes.resetStyles);\r\n            this.props.setCSS(this.generateCss(state), state);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Color\r\n                selector=\".jodit_toolbar,.jodit_statusbar\"\r\n                styleKey=\"backgroundColor\"\r\n                color={this.getValue}\r\n                title=\"Toolbar background color\"\r\n                setColor={this.setValue}\r\n            />\r\n            <Color\r\n                selector=\".jodit_icon,.jodit_toolbar .jodit_toolbar_btn>a\"\r\n                styleKey=\"fill|color\"\r\n                bindValue={this.setValue.bind(this, '.jodit_toolbar>li.jodit_toolbar_btn.jodit_with_dropdownlist .jodit_with_dropdownlist-trigger', 'border-top-color')}\r\n                color={this.getValue}\r\n                title=\"Toolbar icon color\"\r\n                setColor={this.setValue}\r\n            />\r\n            <Color\r\n                selector=\".jodit_workplace,.jodit_toolbar,.jodit_statusbar,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-separator,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-break\"\r\n                styleKey=\"borderColor\"\r\n                color={this.getValue}\r\n                title=\"Toolbar border color\"\r\n                setColor={this.setValue}\r\n            />\r\n            <Color\r\n                selector=\".jodit_container\"\r\n                styleKey=\"backgroundColor\"\r\n                color={this.getValue}\r\n                title=\"Editor background color\"\r\n                setColor={this.setValue}\r\n            />\r\n            <Color\r\n                selector=\".jodit_wysiwyg\"\r\n                styleKey=\"color\"\r\n                bindValue={this.setValue.bind(this, '.jodit_placeholder', 'color')}\r\n                bindTransform={(color) => {\r\n                    color = tinycolor(color);\r\n                    color.setAlpha(.5);\r\n                    return color.toHex8String();\r\n                }}\r\n                color={this.getValue}\r\n                title=\"Editor text color\"\r\n                setColor={this.setValue}\r\n            />\r\n        </div>;\r\n    }\r\n}","export const LoremIpsum = `<p>\r\n    <img style=\"float:right; margin: 10px;\" src=\"https://xdsoft.net/jodit/files/download.jpg\" alt=\"Itaque nostrum est-quod nostrum dico, artis est-ad ea principia, quae accepimus.\"></p>\r\n<h1>Itaque nostrum est-quod nostrum dico, artis est-ad ea principia, quae accepimus.</h1>\r\n\r\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <i>Quonam, inquit, modo?</i> <mark>Illum mallem levares, quo optimum atque humanissimum virum, Cn.</mark> Quae quidem vel cum periculo est quaerenda vobis; Amicitiam autem adhibendam esse censent,\r\n    quia sit ex eo genere, quae prosunt. <a href=\"http://loripsum.net/\" target=\"_blank\">Duo Reges: constructio interrete.</a> Illud quaero, quid ei, qui in voluptate summum bonum ponat, consentaneum sit dicere. At vero illa, quae Peripatetici, quae Stoici\r\n    dicunt, semper tibi in ore sunt in iudiciis, in senatu. Dic in quovis conventu te omnia facere, ne doleas. Nummus in Croesi divitiis obscuratur, pars est tamen divitiarum. Isto modo ne improbos quidem, si essent boni viri. Luxuriam non reprehendit,\r\n    modo sit vacua infinita cupiditate et timore. Sit ista in Graecorum levitate perversitas, qui maledictis insectantur eos, a quibus de veritate dissentiunt. </p>\r\n\r\n<blockquote cite=\"http://loripsum.net\">\r\n    Nec enim absolvi beata vita sapientis neque ad exitum perduci poterit, si prima quaeque bene ab eo consulta atque facta ipsius oblivione obruentur.\r\n</blockquote>\r\n\r\n\r\n<pre>Tum ille: Tu autem cum ipse tantum librorum habeas, quos hic\r\ntandem requiris?\r\n\r\nPossumusne ergo in vita summum bonum dicere, cum id ne in\r\ncena quidem posse videamur?\r\n</pre>\r\n\r\n\r\n<ul>\r\n    <li>Possumusne ergo in vita summum bonum dicere, cum id ne in cena quidem posse videamur?</li>\r\n    <li>Quodsi vultum tibi, si incessum fingeres, quo gravior viderere, non esses tui similis;</li>\r\n</ul>\r\n\r\n\r\n<ol>\r\n    <li>Qui autem diffidet perpetuitati bonorum suorum, timeat necesse est, ne aliquando amissis illis sit miser.</li>\r\n    <li>Nulla profecto est, quin suam vim retineat a primo ad extremum.</li>\r\n</ol>\r\n\r\n\r\n<dl>\r\n    <dt><dfn>Falli igitur possumus.</dfn></dt>\r\n    <dd>Quid enim ab antiquis ex eo genere, quod ad disserendum valet, praetermissum est?</dd>\r\n    <dt><dfn>Scrupulum, inquam, abeunti;</dfn></dt>\r\n    <dd>Scio enim esse quosdam, qui quavis lingua philosophari possint;</dd>\r\n    <dt><dfn>Poterat autem inpune;</dfn></dt>\r\n    <dd>Tum ille: Tu autem cum ipse tantum librorum habeas, quos hic tandem requiris?</dd>\r\n    <dt><dfn>Beatum, inquit.</dfn></dt>\r\n    <dd>Respondeat totidem verbis.</dd>\r\n</dl>`","import React, {Component} from 'react';\nimport CheckBox from \"../checkbox/CheckBox\";\nimport Number from \"../number/Number\";\nimport List from \"../list/List\";\n\nexport default class Sizes extends Component {\n    render() {\n        return <>\n\n            <fieldset>\n                <legend>Sizes</legend>\n\n                {this.props.state.height === 'auto' ||\n                <CheckBox popupKey={\"allowResizeY\"} right name=\"allowResizeY\" onChange={this.props.setOption}\n                          checked={this.props.state.allowResizeY} label=\"Allow Height resize\"/>\n                }\n                <CheckBox popupKey={\"height\"} name=\"height\" onChange={this.props.setHeight}\n                          checked={this.props.state.height === 'auto'} label=\"Auto height\"/>\n\n                {this.props.state.height === 'auto' ||\n                <Number\n                    label=\"Height in pixels\"\n                    name=\"height\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.height}\n                />\n                }\n                <Number\n                    label=\"Min height(px)\"\n                    name=\"minHeight\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.minHeight}\n                />\n                <Number\n                    label=\"Max height(px)\"\n                    name=\"maxHeight\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.maxHeight}\n                />\n                {this.props.state.width === 'auto' ||\n                <CheckBox popupKey={\"allowResizeX\"} right name=\"allowResizeX\" onChange={this.props.setOption}\n                          checked={this.props.state.allowResizeX} label=\"Allow Width resize\"/>\n                }\n                <CheckBox popupKey={\"width\"} name=\"width\" onChange={this.props.setWidth}\n                          checked={this.props.state.width === 'auto'} label=\"Auto width\"/>\n                <Number\n                    label=\"Min width(px)\"\n                    name=\"minWidth\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.minWidth}\n                />\n                <Number\n                    label=\"Max width(px)\"\n                    name=\"maxWidth\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.maxWidth}\n                />\n\n                {this.props.state.width !== 'auto' ?\n                    <Number\n                        label=\"Width in pixels\"\n                        name=\"width\"\n                        onChange={this.props.setOption}\n                        value={this.props.state.width}\n                    /> : ''\n                }\n            </fieldset>\n            <fieldset>\n                <legend>Units</legend>\n                <List name=\"defaultFontSizePoints\" value={this.props.state.defaultFontSizePoints}\n                      onChange={this.props.setOption} list={{\n                    pt: 'Points',\n                    px: 'Pixels',\n                }} label=\"Font size units\"/>\n            </fieldset>\n        </>\n    }\n}","import React, { Component } from 'react';\r\nimport {Jodit} from 'jodit';\r\n\r\n\r\nimport JoditEditor from \"jodit-react\";\r\nimport style from './style.module.css';\r\nimport SyntaxHighlighter, { registerLanguage } from \"react-syntax-highlighter/light\";\r\nimport js from 'react-syntax-highlighter/languages/hljs/javascript';\r\nimport css from 'react-syntax-highlighter/languages/hljs/css';\r\nimport { agate as codeStyle} from 'react-syntax-highlighter/styles/hljs';\r\n\r\nimport Tabs from \"../tab/Tabs\";\r\nimport Tab from \"../tab/Tab\";\r\nimport Options from \"./Options\";\r\nimport Buttons from \"./Buttons\";\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\nimport URL from \"../url/URL\";\r\nimport Text from \"../text/Text\";\r\nimport URLS from \"../url/URLS\";\r\nimport CopyText from \"../copytext/CopyText\";\r\nimport State from \"./State\";\r\nimport { http_build_query } from \"../../App\";\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport Plugins from \"../plugins/Plugins\";\r\nimport Themes from \"../themes/Themes\";\r\nimport { LoremIpsum } from \"./LoremIpsum\";\r\nimport Sizes from \"./Sizes\";\r\n\r\nregisterLanguage('javascript', js);\r\nregisterLanguage('css', css);\r\n\r\nconst history = createHistory();\r\n\r\n\r\nclass JoditMaster extends Component {\r\n    getDefaultState = () => {\r\n        return {\r\n            showLoremIpsum: true,\r\n            currentButtonsTab: null,\r\n            currentTab: this.props.config.currentTab,\r\n            workBoxWidth: 'auto',\r\n            buttons: {\r\n                buttons: [...Jodit.defaultOptions.buttons],\r\n                buttonsMD: this.getButtons('buttonsMD'),\r\n                buttonsSM: this.getButtons('buttonsSM'),\r\n                buttonsXS: this.getButtons('buttonsXS')\r\n            },\r\n            removeButtons: {\r\n                buttons: [],\r\n                buttonsMD: this.getRemoveButtons('buttonsMD'),\r\n                buttonsSM: this.getRemoveButtons('buttonsSM'),\r\n                buttonsXS: this.getRemoveButtons('buttonsXS'),\r\n            },\r\n            activeIndex: {\r\n                buttons: 0,\r\n                buttonsMD: 0,\r\n                buttonsSM: 0,\r\n                buttonsXS: 0,\r\n            },\r\n            css: '',\r\n            theme: {\r\n                '.jodit_workplace,.jodit_toolbar,.jodit_statusbar,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-separator,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-break': {\r\n                    borderColor: '#ccc'\r\n                },\r\n                '.jodit_toolbar,.jodit_statusbar': {\r\n                    backgroundColor: '#ccccc',\r\n                },\r\n                '.jodit_icon,.jodit_toolbar .jodit_toolbar_btn>a': {\r\n                    'fill|color': '#ddd',\r\n                },\r\n                '.jodit_container': {\r\n                    'backgroundColor': '#ddd',\r\n                },\r\n                '.jodit_wysiwyg': {\r\n                    'color': '#ddd',\r\n                },\r\n            },\r\n            config: {\r\n\r\n                autofocus: Jodit.defaultOptions.autofocus,\r\n                useSearch: Jodit.defaultOptions.useSearch,\r\n                defaultFontSizePoints: Jodit.defaultOptions.defaultFontSizePoints,\r\n                toolbar: Jodit.defaultOptions.toolbar,\r\n                iframe: Jodit.defaultOptions.iframe,\r\n                iframeStyle: Jodit.defaultOptions.iframeStyle,\r\n\r\n                uploader: Jodit.defaultOptions.uploader,\r\n\r\n                textIcons: Jodit.defaultOptions.textIcons,\r\n                readonly: Jodit.defaultOptions.readonly,\r\n                spellcheck: Jodit.defaultOptions.spellcheck,\r\n                language: Jodit.defaultOptions.language,\r\n                direction: Jodit.defaultOptions.direction,\r\n                theme: Jodit.defaultOptions.theme,\r\n                toolbarButtonSize: Jodit.defaultOptions.toolbarButtonSize,\r\n                enter: Jodit.defaultOptions.enter,\r\n                defaultMode: Jodit.defaultOptions.defaultMode,\r\n                allowResizeY: Jodit.defaultOptions.allowResizeY,\r\n                allowResizeX: Jodit.defaultOptions.allowResizeX,\r\n\r\n                toolbarAdaptive: Jodit.defaultOptions.toolbarAdaptive,\r\n                toolbarSticky: Jodit.defaultOptions.toolbarSticky,\r\n                toolbarStickyOffset: Jodit.defaultOptions.toolbarStickyOffset,\r\n\r\n                showCharsCounter: Jodit.defaultOptions.showCharsCounter,\r\n                showWordsCounter: Jodit.defaultOptions.showWordsCounter,\r\n                showXPathInStatusbar: Jodit.defaultOptions.showXPathInStatusbar,\r\n\r\n                saveHeightInStorage: Jodit.defaultOptions.saveHeightInStorage,\r\n                saveModeInStorage: Jodit.defaultOptions.saveModeInStorage,\r\n\r\n                askBeforePasteHTML: Jodit.defaultOptions.askBeforePasteHTML,\r\n                askBeforePasteFromWord: Jodit.defaultOptions.askBeforePasteFromWord,\r\n                defaultActionOnPaste: Jodit.defaultOptions.defaultActionOnPaste,\r\n\r\n                disablePlugins: Jodit.defaultOptions.disablePlugins,\r\n\r\n                height:  Jodit.defaultOptions.height,\r\n                minHeight:  Jodit.defaultOptions.minHeight,\r\n                maxHeight:  Jodit.defaultOptions.maxHeight,\r\n                width:  Jodit.defaultOptions.width,\r\n                minWidth:  Jodit.defaultOptions.minWidth,\r\n                maxWidth:  Jodit.defaultOptions.maxWidth,\r\n                sizeLG: 800,\r\n            }\r\n        }\r\n    };\r\n\r\n    getButtons(type) {\r\n        return Jodit.defaultOptions.buttonsXS.concat(this.getRemoveButtons(type))\r\n    }\r\n    getRemoveButtons(type) {\r\n        return Jodit.defaultOptions.buttons.filter((key) => {\r\n            return key !== '|' && key !== '\\n' && Jodit.defaultOptions[type].indexOf(key) === -1\r\n        })\r\n    }\r\n\r\n    state = (((defaultState) => {\r\n        return {\r\n            ...defaultState,\r\n            css: defaultState.css || this.props.config.initialCSS || '',\r\n            config: {\r\n                ...defaultState.config,\r\n                ...this.props.config.initialConfig\r\n            }\r\n        };\r\n    })(this.getDefaultState()));\r\n\r\n    setButtonsTab = (value) => {\r\n        this.setState({\r\n            ...this.state,\r\n            currentButtonsTab: value\r\n        });\r\n    };\r\n\r\n    setTab = (value) => {\r\n        this.setState({\r\n            ...this.state,\r\n            currentTab: value\r\n        });\r\n    };\r\n\r\n    height = 150;\r\n    setHeight = (value) => {\r\n        this.setOption(value === true ? 'auto' : this.height, 'height')\r\n    };\r\n\r\n    width = 500;\r\n    setWidth = (value) => {\r\n        this.setOption(value === true ? 'auto' : this.width, 'width')\r\n    };\r\n\r\n    setButtons = (name, buttons, removeButtons, activeIndex) => {\r\n        const state = {...this.state};\r\n        let change = false;\r\n\r\n        if (this.state.buttons[name] !== buttons) {\r\n            state.buttons[name] = buttons;\r\n            change = true;\r\n        }\r\n\r\n        if (this.state.removeButtons[name] !== removeButtons) {\r\n            state.removeButtons[name] = removeButtons;\r\n            change = true;\r\n        }\r\n\r\n        if (change) {\r\n            state.config = {...state.config, [name]: buttons.filter((key) => removeButtons.indexOf(key) === -1)}\r\n        }\r\n\r\n        if (this.state.activeIndex[name] !== activeIndex) {\r\n            state.activeIndex[name] = activeIndex;\r\n            change = true;\r\n        }\r\n\r\n        if (change) {\r\n            this.setState(state);\r\n        }\r\n    };\r\n\r\n    timer;\r\n    toggleLoremIpsum = (showLoremIpsum) => {\r\n        if (!showLoremIpsum && this.value === LoremIpsum) {\r\n            this.value = '';\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            showLoremIpsum\r\n        });\r\n    };\r\n    setOption = (value, name) => {\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            switch (name) {\r\n                case 'height':\r\n                case 'width':\r\n                    if (value !== 'auto') {\r\n                        this[name] = value;\r\n                    }\r\n                    break;\r\n                default:\r\n            }\r\n\r\n            if (JSON.stringify(this.state[name]) !== JSON.stringify(value)) {\r\n                this.setState(prevState => {\r\n                    let newStage = {...prevState.config};\r\n\r\n                    if (name === 'iframe' && value ===  false) {\r\n                        newStage.iframeStyle = Jodit.defaultOptions.iframeStyle;\r\n                        newStage.iframeCSSLinks = Jodit.defaultOptions.iframeCSSLinks;\r\n                        newStage.iframeBaseUrl = Jodit.defaultOptions.iframeBaseUrl;\r\n                    }\r\n\r\n                    let link = newStage, keys = name.split('.');\r\n\r\n                    keys.forEach((key, index) => {\r\n                        if (index !== keys.length - 1) {\r\n                            link[key] = {...link[key]};\r\n                            link = link[key];\r\n                        }\r\n                    });\r\n\r\n                    name = keys[keys.length - 1];\r\n\r\n                    link[name] = value;\r\n\r\n                    return {\r\n                    ...prevState,\r\n                        config: newStage\r\n                    }\r\n                });\r\n\r\n            }\r\n        }, 100)\r\n    };\r\n\r\n    getCode = () => {\r\n        const getChangedOption = (config, defaultOptions) => {\r\n            const keys = Object.keys(config), options = Array.isArray(config) ? [] : {};\r\n\r\n            keys.forEach((key) => {\r\n                if (defaultOptions[key] !== undefined && JSON.stringify(config[key]) !== JSON.stringify(defaultOptions[key]) && ['sizeLG'].indexOf(key) === -1) {\r\n                    options[key] = typeof config[key] === 'object' ? getChangedOption(config[key], defaultOptions[key]) : config[key];\r\n                }\r\n            });\r\n\r\n            return options;\r\n        };\r\n\r\n        const options = getChangedOption(this.state.config, Jodit.defaultOptions);\r\n\r\n        ['buttons', 'buttonsMD', 'buttonsSM', 'buttonsXS'].forEach((key) => {\r\n            if (options[key]) {\r\n                options[key] = options[key].toString();\r\n            }\r\n        });\r\n\r\n        if (typeof this.props.config.setConfig === 'function') {\r\n            this.props.config.setConfig(options);\r\n        }\r\n\r\n        this.__isDefault = Object.keys(options).length === 0 && this.state.css === '';\r\n\r\n        const config = JSON.stringify(options, null, 2);\r\n\r\n        if (this.state.currentTab !== 'Options' && this.state.currentTab !== null) {\r\n            options.currentTab = this.state.currentTab;\r\n        }\r\n\r\n        if (this.props.config.historyAPI) {\r\n            history.push('?' + http_build_query(options), options)\r\n        }\r\n\r\n        return 'var editor = new Jodit(\"#editor\"' + (config !== '{}' ? ', '  + config + '' : '') + ');';\r\n    };\r\n\r\n    value = '';\r\n\r\n    onEditorChange = (value) => {\r\n        this.value = value;\r\n    };\r\n\r\n    setWorkboxWidth = (tab) => {\r\n        this.setState({\r\n            ...this.state,\r\n            workBoxWidth: tab.props.width\r\n        });\r\n        setTimeout(() => {\r\n            let event = document.createEvent(\"HTMLEvents\");\r\n            event.initEvent(\"resize\", true, true);\r\n            window.dispatchEvent(event);\r\n        }, 100);\r\n    };\r\n    setCSS = (css, theme) => {\r\n        this.setState({\r\n            ...this.state,\r\n            css: css || this.props.config.initialCSS,\r\n            theme\r\n        });\r\n    };\r\n\r\n    __isDefault = true;\r\n    isDefault = () => {\r\n        return this.__isDefault;\r\n    };\r\n    restoreDefault = () => {\r\n        if (window.confirm('Are you sure you want to restore the default settings?')) {\r\n            Themes.resetStyles = {};\r\n            this.setState({...this.getDefaultState()});\r\n        }\r\n    };\r\n    render() {\r\n        const code = this.getCode();\r\n\r\n        if (typeof this.props.config.setCode === 'function') {\r\n            this.props.config.setCode(code);\r\n        }\r\n\r\n        if (typeof this.props.config.setCSS === 'function' && this.state.css) {\r\n            this.props.config.setCSS(this.state.css);\r\n        }\r\n\r\n        return (\r\n            <div className={style.layout}>\r\n                <div className={style.leftside}>\r\n                    {this.props.config.showEditor &&\r\n                    <div>\r\n                        <div className={style.workbox} style={{width: this.state.workBoxWidth}}>\r\n                            <CheckBox\r\n                                name=\"showLoremIpsum\"\r\n                                onChange={this.toggleLoremIpsum}\r\n                                defaultChecked={this.state.showLoremIpsum}\r\n                                label=\"Show lorem ipsum text\"\r\n                            />\r\n                            <JoditEditor\r\n                                onChange={this.onEditorChange}\r\n                                config={this.state.config}\r\n                                value={this.state.showLoremIpsum ? LoremIpsum : this.value}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    {this.props.config.showCode &&\r\n                    <div>\r\n                        <h2>Code</h2>\r\n                        <CopyText>\r\n                            <SyntaxHighlighter showLineNumbers={false} language='javascript'\r\n                                               style={codeStyle}>{code}</SyntaxHighlighter>\r\n                        </CopyText>\r\n                        {this.state.css && <React.Fragment>\r\n                            <h2>CSS</h2>\r\n                            <CopyText>\r\n                                <SyntaxHighlighter showLineNumbers={false} language='css' style={codeStyle}>{this.state.css}</SyntaxHighlighter>\r\n                            </CopyText>\r\n                        </React.Fragment>}\r\n                    </div>\r\n                    }\r\n                    {this.state.css && <style>{this.state.css}</style>}\r\n                </div>\r\n                <div className={style.rightside}>\r\n                    <div className={style.item}>\r\n                        <Tabs currentTab={this.state.currentTab} setTab={this.setTab}>\r\n                            <Tab label=\"Options\">\r\n                                {this.isDefault() || (<div className={style.defaultRestore}>\r\n                                    <button onClick={this.restoreDefault} type={\"button\"}>Restore defaults</button>\r\n                                </div>)}\r\n\r\n                                <Options\r\n                                    state={this.state.config}\r\n                                    height={this.height}\r\n                                    width={this.width}\r\n                                    setOption={this.setOption}\r\n                                    setHeight={this.setHeight}\r\n                                    setWidth={this.setWidth}\r\n                                />\r\n                            </Tab>\r\n                            <Tab label=\"Sizes\">\r\n                                <Sizes\r\n                                    state={this.state.config}\r\n                                    height={this.height}\r\n                                    width={this.width}\r\n                                    setOption={this.setOption}\r\n                                    setHeight={this.setHeight}\r\n                                    setWidth={this.setWidth}\r\n                                />\r\n                            </Tab>\r\n                            {this.props.config.showButtonsTab === false ||\r\n                                this.state.config.toolbar === false ||\r\n                                <Tab label=\"Buttons\">\r\n                                    <CheckBox popupKey=\"toolbarAdaptive\" name=\"toolbarAdaptive\" onChange={this.setOption} defaultChecked={this.state.config.toolbarAdaptive} label=\"Toolbar adaptive\"/>\r\n                                    <Tabs setTab={this.setButtonsTab} currentTab={this.state.currentButtonsTab}>\r\n                                        <Tab onClick={this.setWorkboxWidth} width={\"auto\"} label=\"Desktop\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttons} removeButtons={this.state.removeButtons.buttons} name=\"buttons\" setButtons={this.setButtons} buttons={this.state.buttons.buttons}/>\r\n                                        </Tab>\r\n                                        {!this.state.config.toolbarAdaptive ||\r\n                                        <Tab onClick={this.setWorkboxWidth} width={799} label=\"Medium(900px)\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttonsMD}\r\n                                                     removeButtons={this.state.removeButtons.buttonsMD} name=\"buttonsMD\"\r\n                                                     setButtons={this.setButtons} buttons={this.state.buttons.buttonsMD}/>\r\n                                        </Tab>\r\n                                        }\r\n                                        {!this.state.config.toolbarAdaptive ||\r\n                                        <Tab onClick={this.setWorkboxWidth} width={699} label=\"Tablet(700px)\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttonsSM}\r\n                                                     removeButtons={this.state.removeButtons.buttonsSM} name=\"buttonsSM\"\r\n                                                     setButtons={this.setButtons} buttons={this.state.buttons.buttonsSM}/>\r\n                                        </Tab>\r\n                                        }\r\n                                        {!this.state.config.toolbarAdaptive ||\r\n                                        <Tab onClick={this.setWorkboxWidth} width={399} label=\"Mobile(400px)\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttonsXS}\r\n                                                     removeButtons={this.state.removeButtons.buttonsXS} name=\"buttonsXS\"\r\n                                                     setButtons={this.setButtons} buttons={this.state.buttons.buttonsXS}/>\r\n                                        </Tab>\r\n                                        }\r\n                                    </Tabs>\r\n                                </Tab>\r\n                            }\r\n                            {this.state.config.iframe === false ||\r\n                            <Tab label=\"Iframe mode\">\r\n                                <URL\r\n                                    label=\"Iframe Base URL\"\r\n                                    name=\"iframeBaseUrl\"\r\n                                    onChange={this.setOption}\r\n                                    value={this.state.config.iframeBaseUrl}\r\n                                />\r\n                                <Text\r\n                                    label=\"iframe Default Style\"\r\n                                    name=\"iframeStyle\"\r\n                                    onChange={this.setOption}\r\n                                    value={this.state.config.iframeStyle}\r\n                                />\r\n                                <URLS\r\n                                    label=\"Iframe external stylesheets files\"\r\n                                    name=\"iframeCSSLinks\"\r\n                                    onChange={this.setOption}\r\n                                    value={this.state.config.iframeCSSLinks}\r\n                                />\r\n                            </Tab>\r\n                            }\r\n                            <Tab label=\"State\">\r\n                                <State\r\n                                    config={this.state.config}\r\n                                    setOption={this.setOption}\r\n                                />\r\n                            </Tab>\r\n                            <Tab label=\"Plugins\">\r\n                                <Plugins\r\n                                    config={this.state.config}\r\n                                    setOption={this.setOption}\r\n                                />\r\n                            </Tab>\r\n                            <Tab label=\"Themes\">\r\n                                <Themes theme={this.state.theme} setCSS={this.setCSS}/>\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JoditMaster;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport JoditMaster from \"./components/master/JoditMaster\";\n\nexport const urlencode = function (str) {\n    str = (str + '')\n\n    return encodeURIComponent(str)\n        .replace(/!/g, '%21')\n        .replace(/'/g, '%27')\n        .replace(/\\(/g, '%28')\n        .replace(/\\)/g, '%29')\n        .replace(/\\*/g, '%2A')\n};\n\nexport function http_build_query (formdata, numericPrefix, argSeparator) {\n    let encodeFunc = urlencode;\n\n    let value\n    let key\n    let tmp = []\n\n    let _httpBuildQueryHelper = function (key, val, argSeparator) {\n        let k\n        let tmp = []\n        if (val === true) {\n            val = true;\n        } else if (val === false) {\n            val = false;\n        }\n        if (val !== null) {\n            if (typeof val === 'object') {\n                for (k in val) {\n                    if (val[k] !== null) {\n                        tmp.push(_httpBuildQueryHelper(key + '[' + k + ']', val[k], argSeparator))\n                    }\n                }\n                return tmp.join(argSeparator)\n            } else if (typeof val !== 'function') {\n                return encodeFunc(key) + '=' + encodeFunc(val)\n            } else {\n                throw new Error('There was an error processing for http_build_query().')\n            }\n        } else {\n            return ''\n        }\n    }\n\n    if (!argSeparator) {\n        argSeparator = '&'\n    }\n    for (key in formdata) {\n        value = formdata[key]\n        if (numericPrefix && !isNaN(key)) {\n            key = String(numericPrefix) + key\n        }\n        let query = _httpBuildQueryHelper(key, value, argSeparator)\n        if (query !== '') {\n            tmp.push(query)\n        }\n    }\n\n    return tmp.join(argSeparator)\n}\n\nconst getParams = query => {\n    if (!query) {\n        return { };\n    }\n\n    return (/^[?#]/.test(query) ? query.slice(1) : query).split('&')\n        .reduce((params, param) => {\n            let [ key, value ] = param.split('=');\n\n            key = key\n                .replace(/%5B/g, '.')\n                .replace(/%5D/g, '')\n\n            let link = params, keys = key.split('.');\n            keys.forEach((name, index) => {\n                if (index !== keys.length - 1) {\n                    if (!link[name]) {\n                        link[name] = {};\n                    }\n                    link = link[name];\n                }\n            });\n\n            key = keys[keys.length - 1];\n\n            link[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n\n            if (link[key].toString().match(/^[0-9]+$/)) {\n                link[key] = parseInt(link[key], 10);\n            }\n\n            if (link[key] === 'true') {\n                link[key] = true;\n            }\n            if (link[key] === 'false') {\n                link[key] = false;\n            }\n\n\n            return params;\n        }, { });\n};\n\nclass App extends Component {\n  config;\n  constructor() {\n    super();\n\n    this.config = {...{\n        currentTab: null,\n        showCode: true,\n        showEditor: true,\n        showButtonsTab: true,\n        historyAPI: true,\n        dataURL: './',\n        setCSS: (css) => {},\n        setCode: (code) => {},\n        setConfig: (config) => {},\n        ready: () => {},\n        initialCSS: '',\n        initialConfig: {\n        },\n        ...window.JoditPlayConfig\n    }};\n\n    this.config.currentTab = getParams(window.location.search.substr(1))['currentTab'] || null;\n    this.config.initialConfig = {...this.config.initialConfig, ...getParams(window.location.search.substr(1))};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <JoditMaster config={this.config}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nif (!window.JoditPlayConfig) {\n    window.JoditPlayConfig = {\n        // dataURL: './',\n    };\n}\n\nwindow.JoditPlayReady = (element) => {\n    ReactDOM.render(<App />, element);\n};\n\nconst element = document.getElementById('root');\nelement && window.JoditPlayReady(element);\n"],"sourceRoot":""}